{:scrape #datascript/DB {:schema {:description {:db/cardinality :db.cardinality/many, :db/doc "Docstring for the concept."}, :allow-incomplete {:db/index true, :db/doc "Temporary bookkeeping property used by the scraper."}, :lib-scraper.model.concepts.datatype/instance {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/doc "Concepts of this type."}, :lib-scraper.model.concepts.namespaced/id {:db/unique :db.unique/identity, :db/doc "Fully qualified name of the concept."}, :lib-scraper.model.concepts.datatype/id {:db/unique :db.unique/identity, :db/doc "Unique name of the datatype."}, :lib-scraper.model.paradigms.oo.class/constructor {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/isComponent true, :db/doc "Constructor of the class."}, :type {:db/cardinality :db.cardinality/many, :db/doc "Type of the concept."}, :source {:db/doc "The datasource this entity originates from. Typically a URL."}, :lib-scraper.model.concepts.parameter/position {:db/doc "Position of the parameter."}, :tempid {:db/cardinality :db.cardinality/many, :db/unique :db.unique/identity, :db/doc "Temporary bookkeeping property used by the scraper."}, :lib-scraper.model.concepts.parameter/optional {:db/doc "Denotes whether this parameter is optional."}, :lib-scraper.model.paradigms.oo.class/extends {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/doc "Superclass of the class."}, :lib-scraper.model.paradigms.oo.class/method {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/isComponent true, :db/doc "Method of the class."}, :lib-scraper.model.concepts.namespace/member {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/isComponent true, :db/doc "Concept is member of the namespace."}, :lib-scraper.model.concepts.named/name {:db/index true, :db/doc "Name of the concept."}, :lib-scraper.model.concepts.callable/parameter {:db/valueType :db.type/ref, :db/cardinality :db.cardinality/many, :db/isComponent true, :db/doc "A parameter of the callable."}, :lib-scraper.model.concepts.namespace/id {:db/unique :db.unique/identity, :db/doc "Unique name of the namespace."}}, :datoms [[1 :type :lib-scraper.model.concepts.datatype/datatype 536870913] [1 :lib-scraper.model.concepts.datatype/id "array" 536870913] [1 :lib-scraper.model.concepts.datatype/instance 6 536870913] [1 :lib-scraper.model.concepts.datatype/instance 29 536870915] [1 :lib-scraper.model.concepts.datatype/instance 35 536870915] [1 :lib-scraper.model.concepts.datatype/instance 38 536870916] [1 :lib-scraper.model.concepts.datatype/instance 39 536870916] [1 :lib-scraper.model.concepts.datatype/instance 54 536870917] [1 :lib-scraper.model.concepts.datatype/instance 69 536870918] [1 :lib-scraper.model.concepts.datatype/instance 75 536870918] [1 :lib-scraper.model.concepts.datatype/instance 82 536870919] [1 :lib-scraper.model.concepts.datatype/instance 93 536870920] [1 :lib-scraper.model.concepts.datatype/instance 99 536870921] [1 :lib-scraper.model.concepts.datatype/instance 101 536870921] [1 :lib-scraper.model.concepts.datatype/instance 117 536870922] [1 :lib-scraper.model.concepts.datatype/instance 119 536870922] [1 :lib-scraper.model.concepts.datatype/instance 122 536870922] [1 :lib-scraper.model.concepts.datatype/instance 125 536870922] [1 :lib-scraper.model.concepts.datatype/instance 128 536870922] [1 :lib-scraper.model.concepts.datatype/instance 131 536870922] [1 :lib-scraper.model.concepts.datatype/instance 140 536870923] [1 :lib-scraper.model.concepts.datatype/instance 145 536870924] [1 :lib-scraper.model.concepts.datatype/instance 147 536870924] [1 :lib-scraper.model.concepts.datatype/instance 168 536870925] [1 :lib-scraper.model.concepts.datatype/instance 169 536870925] [1 :lib-scraper.model.concepts.datatype/instance 171 536870925] [1 :lib-scraper.model.concepts.datatype/instance 172 536870925] [1 :lib-scraper.model.concepts.datatype/instance 182 536870926] [1 :lib-scraper.model.concepts.datatype/instance 200 536870927] [1 :lib-scraper.model.concepts.datatype/instance 202 536870927] [1 :lib-scraper.model.concepts.datatype/instance 205 536870927] [1 :lib-scraper.model.concepts.datatype/instance 208 536870927] [1 :lib-scraper.model.concepts.datatype/instance 210 536870927] [1 :lib-scraper.model.concepts.datatype/instance 212 536870927] [1 :lib-scraper.model.concepts.datatype/instance 214 536870927] [1 :lib-scraper.model.concepts.datatype/instance 217 536870927] [1 :lib-scraper.model.concepts.datatype/instance 261 536870929] [1 :lib-scraper.model.concepts.datatype/instance 266 536870929] [1 :lib-scraper.model.concepts.datatype/instance 267 536870929] [1 :lib-scraper.model.concepts.datatype/instance 272 536870929] [1 :lib-scraper.model.concepts.datatype/instance 274 536870930] [1 :lib-scraper.model.concepts.datatype/instance 282 536870931] [1 :lib-scraper.model.concepts.datatype/instance 290 536870931] [1 :lib-scraper.model.concepts.named/name "array" 536870913] [2 :type :lib-scraper.model.concepts.datatype/datatype 536870913] [2 :lib-scraper.model.concepts.datatype/id "integer" 536870913] [2 :lib-scraper.model.concepts.datatype/instance 8 536870913] [2 :lib-scraper.model.concepts.datatype/instance 9 536870913] [2 :lib-scraper.model.concepts.named/name "integer" 536870913] [3 :type :lib-scraper.model.concepts.datatype/datatype 536870913] [3 :lib-scraper.model.concepts.datatype/id "int" 536870913] [3 :lib-scraper.model.concepts.datatype/instance 11 536870913] [3 :lib-scraper.model.concepts.datatype/instance 12 536870913] [3 :lib-scraper.model.concepts.datatype/instance 31 536870915] [3 :lib-scraper.model.concepts.datatype/instance 33 536870915] [3 :lib-scraper.model.concepts.datatype/instance 34 536870915] [3 :lib-scraper.model.concepts.datatype/instance 40 536870916] [3 :lib-scraper.model.concepts.datatype/instance 41 536870916] [3 :lib-scraper.model.concepts.datatype/instance 71 536870918] [3 :lib-scraper.model.concepts.datatype/instance 73 536870918] [3 :lib-scraper.model.concepts.datatype/instance 74 536870918] [3 :lib-scraper.model.concepts.datatype/instance 103 536870921] [3 :lib-scraper.model.concepts.datatype/instance 105 536870921] [3 :lib-scraper.model.concepts.datatype/instance 106 536870921] [3 :lib-scraper.model.concepts.datatype/instance 142 536870923] [3 :lib-scraper.model.concepts.datatype/instance 146 536870924] [3 :lib-scraper.model.concepts.datatype/instance 150 536870924] [3 :lib-scraper.model.concepts.datatype/instance 151 536870924] [3 :lib-scraper.model.concepts.datatype/instance 154 536870924] [3 :lib-scraper.model.concepts.datatype/instance 156 536870924] [3 :lib-scraper.model.concepts.datatype/instance 276 536870930] [3 :lib-scraper.model.concepts.datatype/instance 277 536870930] [3 :lib-scraper.model.concepts.datatype/instance 278 536870930] [3 :lib-scraper.model.concepts.datatype/instance 284 536870931] [3 :lib-scraper.model.concepts.datatype/instance 288 536870931] [3 :lib-scraper.model.concepts.datatype/instance 291 536870931] [3 :lib-scraper.model.concepts.named/name "int" 536870913] [4 :type :lib-scraper.model.concepts.datatype/datatype 536870913] [4 :lib-scraper.model.concepts.datatype/id "float" 536870913] [4 :lib-scraper.model.concepts.datatype/instance 13 536870913] [4 :lib-scraper.model.concepts.datatype/instance 42 536870916] [4 :lib-scraper.model.concepts.datatype/instance 100 536870921] [4 :lib-scraper.model.concepts.datatype/instance 153 536870924] [4 :lib-scraper.model.concepts.datatype/instance 275 536870930] [4 :lib-scraper.model.concepts.datatype/instance 283 536870931] [4 :lib-scraper.model.concepts.datatype/instance 289 536870931] [4 :lib-scraper.model.concepts.named/name "float" 536870913] [5 :description "Apply clustering to a projection to the normalized laplacian." 536870913] [5 :description "If affinity is the adjacency matrix of a graph, this method can be\nused to find normalized graph cuts." 536870913] [5 :description "In practice Spectral Clustering is very useful when the structure of\nthe individual clusters is highly non-convex or more generally when\na measure of the center and spread of the cluster is not a suitable\ndescription of the complete cluster. For instance when clusters are\nnested circles on the 2D plan." 536870913] [5 :description "Read more in the ." 536870913] [5 :description "The graph should contain only one connect component, elsewhere\nthe results make little sense." 536870913] [5 :description "This algorithm solves the normalized cut for k=2: it is a\nnormalized spectral clustering." 536870913] [5 :type :lib-scraper.model.paradigms.functional.function/function 536870913] [5 :lib-scraper.model.concepts.callable/parameter 6 536870913] [5 :lib-scraper.model.concepts.callable/parameter 8 536870913] [5 :lib-scraper.model.concepts.callable/parameter 9 536870913] [5 :lib-scraper.model.concepts.callable/parameter 10 536870913] [5 :lib-scraper.model.concepts.callable/parameter 11 536870913] [5 :lib-scraper.model.concepts.callable/parameter 12 536870913] [5 :lib-scraper.model.concepts.callable/parameter 13 536870913] [5 :lib-scraper.model.concepts.callable/parameter 14 536870913] [5 :lib-scraper.model.concepts.named/name "spectral_clustering" 536870913] [5 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.spectral_clustering" 536870913] [6 :description "The affinity matrix describing the relationship of the samples to\nembed. ." 536870913] [6 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [6 :lib-scraper.model.concepts.named/name "affinity" 536870913] [6 :lib-scraper.model.concepts.parameter/position 0 536870913] [8 :description "Number of clusters to extract." 536870913] [8 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [8 :lib-scraper.model.concepts.named/name "n_clusters" 536870913] [8 :lib-scraper.model.concepts.parameter/optional true 536870913] [8 :lib-scraper.model.concepts.parameter/position 2 536870913] [9 :description "Number of eigen vectors to use for the spectral embedding" 536870913] [9 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [9 :lib-scraper.model.concepts.named/name "n_components" 536870913] [9 :lib-scraper.model.concepts.parameter/optional true 536870913] [9 :lib-scraper.model.concepts.parameter/position 3 536870913] [10 :description "The eigenvalue decomposition strategy to use. AMG requires pyamg\nto be installed. It can be faster on very large, sparse problems,\nbut may also lead to instabilities" 536870913] [10 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [10 :lib-scraper.model.concepts.named/name "eigen_solver" 536870913] [10 :lib-scraper.model.concepts.parameter/position 4 536870913] [11 :description "A pseudo random number generator used for the initialization of the\nlobpcg eigen vectors decomposition when eigen_solver == ‘amg’ and by\nthe K-Means initialization. Use an int to make the randomness\ndeterministic.\nSee ." 536870913] [11 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [11 :lib-scraper.model.concepts.named/name "random_state" 536870913] [11 :lib-scraper.model.concepts.parameter/optional true 536870913] [11 :lib-scraper.model.concepts.parameter/position 5 536870913] [12 :description "Number of time the k-means algorithm will be run with different\ncentroid seeds. The final results will be the best output of\nn_init consecutive runs in terms of inertia." 536870913] [12 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [12 :lib-scraper.model.concepts.named/name "n_init" 536870913] [12 :lib-scraper.model.concepts.parameter/optional true 536870913] [12 :lib-scraper.model.concepts.parameter/position 6 536870913] [13 :description "Stopping criterion for eigendecomposition of the Laplacian matrix\nwhen using arpack eigen_solver." 536870913] [13 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [13 :lib-scraper.model.concepts.named/name "eigen_tol" 536870913] [13 :lib-scraper.model.concepts.parameter/optional true 536870913] [13 :lib-scraper.model.concepts.parameter/position 7 536870913] [14 :description "The strategy to use to assign labels in the embedding\nspace.  There are two ways to assign labels after the laplacian\nembedding.  k-means can be applied and is a popular choice. But it can\nalso be sensitive to initialization. Discretization is another\napproach which is less sensitive to random initialization. See\nthe ‘Multiclass spectral clustering’ paper referenced below for\nmore details on the discretization approach." 536870913] [14 :type :lib-scraper.model.concepts.parameter/parameter 536870913] [14 :lib-scraper.model.concepts.named/name "assign_labels" 536870913] [14 :lib-scraper.model.concepts.parameter/optional true 536870913] [14 :lib-scraper.model.concepts.parameter/position 8 536870913] [15 :type :lib-scraper.model.concepts.namespace/namespace 536870913] [15 :lib-scraper.model.concepts.named/name "sklearn.cluster" 536870913] [15 :lib-scraper.model.concepts.namespace/id "sklearn.cluster" 536870913] [15 :lib-scraper.model.concepts.namespace/member 5 536870913] [15 :lib-scraper.model.concepts.namespace/member 37 536870916] [15 :lib-scraper.model.concepts.namespace/member 47 536870917] [15 :lib-scraper.model.concepts.namespace/member 76 536870919] [15 :lib-scraper.model.concepts.namespace/member 87 536870920] [15 :lib-scraper.model.concepts.namespace/member 98 536870921] [15 :lib-scraper.model.concepts.namespace/member 107 536870922] [15 :lib-scraper.model.concepts.namespace/member 139 536870923] [15 :lib-scraper.model.concepts.namespace/member 144 536870924] [15 :lib-scraper.model.concepts.namespace/member 162 536870925] [15 :lib-scraper.model.concepts.namespace/member 175 536870926] [15 :lib-scraper.model.concepts.namespace/member 189 536870927] [15 :lib-scraper.model.concepts.namespace/member 225 536870928] [15 :lib-scraper.model.concepts.namespace/member 252 536870929] [15 :lib-scraper.model.concepts.namespace/member 273 536870930] [15 :lib-scraper.model.concepts.namespace/member 281 536870931] [18 :type :lib-scraper.model.concepts.datatype/datatype 536870915] [18 :lib-scraper.model.concepts.datatype/id "Ignored" 536870915] [18 :lib-scraper.model.concepts.datatype/instance 30 536870915] [18 :lib-scraper.model.concepts.datatype/instance 55 536870917] [18 :lib-scraper.model.concepts.datatype/instance 57 536870917] [18 :lib-scraper.model.concepts.datatype/instance 70 536870918] [18 :lib-scraper.model.concepts.datatype/instance 83 536870919] [18 :lib-scraper.model.concepts.datatype/instance 85 536870919] [18 :lib-scraper.model.concepts.datatype/instance 94 536870920] [18 :lib-scraper.model.concepts.datatype/instance 96 536870920] [18 :lib-scraper.model.concepts.datatype/instance 118 536870922] [18 :lib-scraper.model.concepts.datatype/instance 121 536870922] [18 :lib-scraper.model.concepts.datatype/instance 124 536870922] [18 :lib-scraper.model.concepts.datatype/instance 130 536870922] [18 :lib-scraper.model.concepts.datatype/instance 170 536870925] [18 :lib-scraper.model.concepts.datatype/instance 173 536870925] [18 :lib-scraper.model.concepts.datatype/instance 183 536870926] [18 :lib-scraper.model.concepts.datatype/instance 185 536870926] [18 :lib-scraper.model.concepts.datatype/instance 201 536870927] [18 :lib-scraper.model.concepts.datatype/instance 204 536870927] [18 :lib-scraper.model.concepts.datatype/instance 207 536870927] [18 :lib-scraper.model.concepts.datatype/instance 211 536870927] [18 :lib-scraper.model.concepts.datatype/instance 216 536870927] [18 :lib-scraper.model.concepts.datatype/instance 236 536870928] [18 :lib-scraper.model.concepts.datatype/instance 238 536870928] [18 :lib-scraper.model.concepts.datatype/instance 243 536870928] [18 :lib-scraper.model.concepts.datatype/instance 262 536870929] [18 :lib-scraper.model.concepts.named/name "Ignored" 536870915] [19 :type :lib-scraper.model.concepts.datatype/datatype 536870915] [19 :lib-scraper.model.concepts.datatype/id "boolean" 536870915] [19 :lib-scraper.model.concepts.datatype/instance 32 536870915] [19 :lib-scraper.model.concepts.datatype/instance 43 536870916] [19 :lib-scraper.model.concepts.datatype/instance 44 536870916] [19 :lib-scraper.model.concepts.datatype/instance 58 536870917] [19 :lib-scraper.model.concepts.datatype/instance 72 536870918] [19 :lib-scraper.model.concepts.datatype/instance 86 536870919] [19 :lib-scraper.model.concepts.datatype/instance 97 536870920] [19 :lib-scraper.model.concepts.datatype/instance 102 536870921] [19 :lib-scraper.model.concepts.datatype/instance 104 536870921] [19 :lib-scraper.model.concepts.datatype/instance 126 536870922] [19 :lib-scraper.model.concepts.datatype/instance 152 536870924] [19 :lib-scraper.model.concepts.datatype/instance 155 536870924] [19 :lib-scraper.model.concepts.datatype/instance 174 536870925] [19 :lib-scraper.model.concepts.datatype/instance 186 536870926] [19 :lib-scraper.model.concepts.datatype/instance 209 536870927] [19 :lib-scraper.model.concepts.datatype/instance 241 536870928] [19 :lib-scraper.model.concepts.datatype/instance 265 536870929] [19 :lib-scraper.model.concepts.named/name "boolean" 536870915] [20 :description "Partitions rows and columns under the assumption that the data has\nan underlying checkerboard structure. For instance, if there are\ntwo row partitions and three column partitions, each row will\nbelong to three biclusters, and each column will belong to two\nbiclusters. The outer product of the corresponding row and column\nlabel vectors gives this checkerboard structure." 536870915] [20 :description "Read more in the ." 536870915] [20 :description "Spectral biclustering (Kluger, 2003)." 536870915] [20 :type :lib-scraper.model.ecosystems.python.class/class 536870915] [20 :lib-scraper.model.concepts.named/name "SpectralBiclustering" 536870915] [20 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.bicluster.SpectralBiclustering" 536870915] [20 :lib-scraper.model.paradigms.oo.class/constructor 21 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 21 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 22 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 23 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 24 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 25 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 26 536870915] [20 :lib-scraper.model.paradigms.oo.class/method 27 536870915] [21 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870915] [21 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [21 :lib-scraper.model.concepts.named/name "__init__" 536870915] [22 :description "Creates a biclustering for X." 536870915] [22 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [22 :lib-scraper.model.concepts.callable/parameter 29 536870915] [22 :lib-scraper.model.concepts.callable/parameter 30 536870915] [22 :lib-scraper.model.concepts.named/name "fit" 536870915] [23 :description "Only works if  and  attributes exist." 536870915] [23 :description "Row and column indices of the i’th bicluster." 536870915] [23 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [23 :lib-scraper.model.concepts.callable/parameter 31 536870915] [23 :lib-scraper.model.concepts.named/name "get_indices" 536870915] [24 :description "Get parameters for this estimator." 536870915] [24 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [24 :lib-scraper.model.concepts.callable/parameter 32 536870915] [24 :lib-scraper.model.concepts.named/name "get_params" 536870915] [25 :description "Shape of the i’th bicluster." 536870915] [25 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [25 :lib-scraper.model.concepts.callable/parameter 33 536870915] [25 :lib-scraper.model.concepts.named/name "get_shape" 536870915] [26 :description "Returns the submatrix corresponding to bicluster ." 536870915] [26 :description "Works with sparse matrices. Only works if  and\n attributes exist." 536870915] [26 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [26 :lib-scraper.model.concepts.callable/parameter 34 536870915] [26 :lib-scraper.model.concepts.callable/parameter 35 536870915] [26 :lib-scraper.model.concepts.named/name "get_submatrix" 536870915] [27 :description "Set the parameters of this estimator." 536870915] [27 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870915] [27 :type :lib-scraper.model.paradigms.oo.method/method 536870915] [27 :lib-scraper.model.concepts.named/name "set_params" 536870915] [28 :type :lib-scraper.model.concepts.namespace/namespace 536870915] [28 :lib-scraper.model.concepts.named/name "sklearn.cluster.bicluster" 536870915] [28 :lib-scraper.model.concepts.namespace/id "sklearn.cluster.bicluster" 536870915] [28 :lib-scraper.model.concepts.namespace/member 20 536870915] [28 :lib-scraper.model.concepts.namespace/member 61 536870918] [29 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [29 :lib-scraper.model.concepts.named/name "X" 536870915] [29 :lib-scraper.model.concepts.parameter/position 0 536870915] [30 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [30 :lib-scraper.model.concepts.named/name "y" 536870915] [30 :lib-scraper.model.concepts.parameter/position 1 536870915] [31 :description "The index of the cluster." 536870915] [31 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [31 :lib-scraper.model.concepts.named/name "i" 536870915] [31 :lib-scraper.model.concepts.parameter/position 0 536870915] [32 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870915] [32 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [32 :lib-scraper.model.concepts.named/name "deep" 536870915] [32 :lib-scraper.model.concepts.parameter/optional true 536870915] [32 :lib-scraper.model.concepts.parameter/position 0 536870915] [33 :description "The index of the cluster." 536870915] [33 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [33 :lib-scraper.model.concepts.named/name "i" 536870915] [33 :lib-scraper.model.concepts.parameter/position 0 536870915] [34 :description "The index of the cluster." 536870915] [34 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [34 :lib-scraper.model.concepts.named/name "i" 536870915] [34 :lib-scraper.model.concepts.parameter/position 0 536870915] [35 :description "The data." 536870915] [35 :type :lib-scraper.model.concepts.parameter/parameter 536870915] [35 :lib-scraper.model.concepts.named/name "data" 536870915] [35 :lib-scraper.model.concepts.parameter/position 1 536870915] [36 :type :lib-scraper.model.concepts.datatype/datatype 536870916] [36 :lib-scraper.model.concepts.datatype/id "bool" 536870916] [36 :lib-scraper.model.concepts.datatype/instance 45 536870916] [36 :lib-scraper.model.concepts.datatype/instance 143 536870923] [36 :lib-scraper.model.concepts.datatype/instance 158 536870924] [36 :lib-scraper.model.concepts.datatype/instance 271 536870929] [36 :lib-scraper.model.concepts.named/name "bool" 536870916] [37 :description "Brendan J. Frey and Delbert Dueck, “Clustering by Passing Messages\nBetween Data Points”, Science Feb. 2007" 536870916] [37 :description "For an example, see ." 536870916] [37 :description "Perform Affinity Propagation Clustering of data" 536870916] [37 :description "Read more in the ." 536870916] [37 :description "When all training samples have equal similarities and equal preferences,\nthe assignment of cluster centers and labels depends on the preference.\nIf the preference is smaller than the similarities, a single cluster center\nand label  for every sample will be returned. Otherwise, every\ntraining sample becomes its own cluster center and is assigned a unique\nlabel." 536870916] [37 :description "When the algorithm does not converge, it returns an empty array as\n and  as label for each training sample." 536870916] [37 :type :lib-scraper.model.paradigms.functional.function/function 536870916] [37 :lib-scraper.model.concepts.callable/parameter 38 536870916] [37 :lib-scraper.model.concepts.callable/parameter 39 536870916] [37 :lib-scraper.model.concepts.callable/parameter 40 536870916] [37 :lib-scraper.model.concepts.callable/parameter 41 536870916] [37 :lib-scraper.model.concepts.callable/parameter 42 536870916] [37 :lib-scraper.model.concepts.callable/parameter 43 536870916] [37 :lib-scraper.model.concepts.callable/parameter 44 536870916] [37 :lib-scraper.model.concepts.callable/parameter 45 536870916] [37 :lib-scraper.model.concepts.named/name "affinity_propagation" 536870916] [37 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.affinity_propagation" 536870916] [38 :description "Matrix of similarities between points" 536870916] [38 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [38 :lib-scraper.model.concepts.named/name "S" 536870916] [38 :lib-scraper.model.concepts.parameter/position 0 536870916] [39 :description "Preferences for each point - points with larger values of\npreferences are more likely to be chosen as exemplars. The number of\nexemplars, i.e. of clusters, is influenced by the input preferences\nvalue. If the preferences are not passed as arguments, they will be\nset to the median of the input similarities (resulting in a moderate\nnumber of clusters). For a smaller amount of clusters, this can be set\nto the minimum value of the similarities." 536870916] [39 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [39 :lib-scraper.model.concepts.named/name "preference" 536870916] [39 :lib-scraper.model.concepts.parameter/optional true 536870916] [39 :lib-scraper.model.concepts.parameter/position 1 536870916] [40 :description "Number of iterations with no change in the number\nof estimated clusters that stops the convergence." 536870916] [40 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [40 :lib-scraper.model.concepts.named/name "convergence_iter" 536870916] [40 :lib-scraper.model.concepts.parameter/optional true 536870916] [40 :lib-scraper.model.concepts.parameter/position 2 536870916] [41 :description "Maximum number of iterations" 536870916] [41 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [41 :lib-scraper.model.concepts.named/name "max_iter" 536870916] [41 :lib-scraper.model.concepts.parameter/optional true 536870916] [41 :lib-scraper.model.concepts.parameter/position 3 536870916] [42 :description "Damping factor between 0.5 and 1." 536870916] [42 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [42 :lib-scraper.model.concepts.named/name "damping" 536870916] [42 :lib-scraper.model.concepts.parameter/optional true 536870916] [42 :lib-scraper.model.concepts.parameter/position 4 536870916] [43 :description "If copy is False, the affinity matrix is modified inplace by the\nalgorithm, for memory efficiency" 536870916] [43 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [43 :lib-scraper.model.concepts.named/name "copy" 536870916] [43 :lib-scraper.model.concepts.parameter/optional true 536870916] [43 :lib-scraper.model.concepts.parameter/position 5 536870916] [44 :description "The verbosity level" 536870916] [44 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [44 :lib-scraper.model.concepts.named/name "verbose" 536870916] [44 :lib-scraper.model.concepts.parameter/optional true 536870916] [44 :lib-scraper.model.concepts.parameter/position 6 536870916] [45 :description "Whether or not to return the number of iterations." 536870916] [45 :type :lib-scraper.model.concepts.parameter/parameter 536870916] [45 :lib-scraper.model.concepts.named/name "return_n_iter" 536870916] [45 :lib-scraper.model.concepts.parameter/optional true 536870916] [45 :lib-scraper.model.concepts.parameter/position 7 536870916] [46 :type :lib-scraper.model.concepts.datatype/datatype 536870917] [46 :lib-scraper.model.concepts.datatype/id "ndarray" 536870917] [46 :lib-scraper.model.concepts.datatype/instance 56 536870917] [46 :lib-scraper.model.concepts.datatype/instance 84 536870919] [46 :lib-scraper.model.concepts.datatype/instance 95 536870920] [46 :lib-scraper.model.concepts.datatype/instance 184 536870926] [46 :lib-scraper.model.concepts.datatype/instance 237 536870928] [46 :lib-scraper.model.concepts.datatype/instance 270 536870929] [46 :lib-scraper.model.concepts.named/name "ndarray" 536870917] [47 :description "Brendan J. Frey and Delbert Dueck, “Clustering by Passing Messages\nBetween Data Points”, Science Feb. 2007" 536870917] [47 :description "For an example, see ." 536870917] [47 :description "Perform Affinity Propagation Clustering of data." 536870917] [47 :description "Read more in the ." 536870917] [47 :description "The algorithmic complexity of affinity propagation is quadratic\nin the number of points." 536870917] [47 :description "When  does not converge,  becomes an empty\narray and all training samples will be labelled as . In addition,\n will then label every sample as ." 536870917] [47 :description "When all training samples have equal similarities and equal preferences,\nthe assignment of cluster centers and labels depends on the preference.\nIf the preference is smaller than the similarities,  will result in\na single cluster center and label  for every sample. Otherwise, every\ntraining sample becomes its own cluster center and is assigned a unique\nlabel." 536870917] [47 :type :lib-scraper.model.ecosystems.python.class/class 536870917] [47 :lib-scraper.model.concepts.named/name "AffinityPropagation" 536870917] [47 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.AffinityPropagation" 536870917] [47 :lib-scraper.model.paradigms.oo.class/constructor 48 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 48 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 49 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 50 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 51 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 52 536870917] [47 :lib-scraper.model.paradigms.oo.class/method 53 536870917] [48 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870917] [48 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [48 :lib-scraper.model.concepts.named/name "__init__" 536870917] [49 :description "Create affinity matrix from negative euclidean distances, then\napply affinity propagation clustering." 536870917] [49 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [49 :lib-scraper.model.concepts.callable/parameter 54 536870917] [49 :lib-scraper.model.concepts.callable/parameter 55 536870917] [49 :lib-scraper.model.concepts.named/name "fit" 536870917] [50 :description "Performs clustering on X and returns cluster labels." 536870917] [50 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [50 :lib-scraper.model.concepts.callable/parameter 56 536870917] [50 :lib-scraper.model.concepts.callable/parameter 57 536870917] [50 :lib-scraper.model.concepts.named/name "fit_predict" 536870917] [51 :description "Get parameters for this estimator." 536870917] [51 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [51 :lib-scraper.model.concepts.callable/parameter 58 536870917] [51 :lib-scraper.model.concepts.named/name "get_params" 536870917] [52 :description "Predict the closest cluster each sample in X belongs to." 536870917] [52 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [52 :lib-scraper.model.concepts.callable/parameter 59 536870917] [52 :lib-scraper.model.concepts.named/name "predict" 536870917] [53 :description "Set the parameters of this estimator." 536870917] [53 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870917] [53 :type :lib-scraper.model.paradigms.oo.method/method 536870917] [53 :lib-scraper.model.concepts.named/name "set_params" 536870917] [54 :description "Data matrix or, if affinity is , matrix of\nsimilarities / affinities." 536870917] [54 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [54 :lib-scraper.model.concepts.named/name "X" 536870917] [54 :lib-scraper.model.concepts.parameter/position 0 536870917] [55 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [55 :lib-scraper.model.concepts.named/name "y" 536870917] [55 :lib-scraper.model.concepts.parameter/position 1 536870917] [56 :description "Input data." 536870917] [56 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [56 :lib-scraper.model.concepts.named/name "X" 536870917] [56 :lib-scraper.model.concepts.parameter/position 0 536870917] [57 :description "not used, present for API consistency by convention." 536870917] [57 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [57 :lib-scraper.model.concepts.named/name "y" 536870917] [57 :lib-scraper.model.concepts.parameter/position 1 536870917] [58 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870917] [58 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [58 :lib-scraper.model.concepts.named/name "deep" 536870917] [58 :lib-scraper.model.concepts.parameter/optional true 536870917] [58 :lib-scraper.model.concepts.parameter/position 0 536870917] [59 :description "New data to predict." 536870917] [59 :type :lib-scraper.model.concepts.parameter/parameter 536870917] [59 :lib-scraper.model.concepts.named/name "X" 536870917] [59 :lib-scraper.model.concepts.parameter/position 0 536870917] [61 :description "Clusters rows and columns of an array  to solve the relaxed\nnormalized cut of the bipartite graph created from  as follows:\nthe edge between row vertex  and column vertex  has weight\n." 536870918] [61 :description "Read more in the ." 536870918] [61 :description "Spectral Co-Clustering algorithm (Dhillon, 2001)." 536870918] [61 :description "Supports sparse matrices, as long as they are nonnegative." 536870918] [61 :description "The resulting bicluster structure is block-diagonal, since each\nrow and each column belongs to exactly one bicluster." 536870918] [61 :type :lib-scraper.model.ecosystems.python.class/class 536870918] [61 :lib-scraper.model.concepts.named/name "SpectralCoclustering" 536870918] [61 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.bicluster.SpectralCoclustering" 536870918] [61 :lib-scraper.model.paradigms.oo.class/constructor 62 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 62 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 63 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 64 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 65 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 66 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 67 536870918] [61 :lib-scraper.model.paradigms.oo.class/method 68 536870918] [62 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870918] [62 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [62 :lib-scraper.model.concepts.named/name "__init__" 536870918] [63 :description "Creates a biclustering for X." 536870918] [63 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [63 :lib-scraper.model.concepts.callable/parameter 69 536870918] [63 :lib-scraper.model.concepts.callable/parameter 70 536870918] [63 :lib-scraper.model.concepts.named/name "fit" 536870918] [64 :description "Only works if  and  attributes exist." 536870918] [64 :description "Row and column indices of the i’th bicluster." 536870918] [64 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [64 :lib-scraper.model.concepts.callable/parameter 71 536870918] [64 :lib-scraper.model.concepts.named/name "get_indices" 536870918] [65 :description "Get parameters for this estimator." 536870918] [65 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [65 :lib-scraper.model.concepts.callable/parameter 72 536870918] [65 :lib-scraper.model.concepts.named/name "get_params" 536870918] [66 :description "Shape of the i’th bicluster." 536870918] [66 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [66 :lib-scraper.model.concepts.callable/parameter 73 536870918] [66 :lib-scraper.model.concepts.named/name "get_shape" 536870918] [67 :description "Returns the submatrix corresponding to bicluster ." 536870918] [67 :description "Works with sparse matrices. Only works if  and\n attributes exist." 536870918] [67 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [67 :lib-scraper.model.concepts.callable/parameter 74 536870918] [67 :lib-scraper.model.concepts.callable/parameter 75 536870918] [67 :lib-scraper.model.concepts.named/name "get_submatrix" 536870918] [68 :description "Set the parameters of this estimator." 536870918] [68 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870918] [68 :type :lib-scraper.model.paradigms.oo.method/method 536870918] [68 :lib-scraper.model.concepts.named/name "set_params" 536870918] [69 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [69 :lib-scraper.model.concepts.named/name "X" 536870918] [69 :lib-scraper.model.concepts.parameter/position 0 536870918] [70 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [70 :lib-scraper.model.concepts.named/name "y" 536870918] [70 :lib-scraper.model.concepts.parameter/position 1 536870918] [71 :description "The index of the cluster." 536870918] [71 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [71 :lib-scraper.model.concepts.named/name "i" 536870918] [71 :lib-scraper.model.concepts.parameter/position 0 536870918] [72 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870918] [72 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [72 :lib-scraper.model.concepts.named/name "deep" 536870918] [72 :lib-scraper.model.concepts.parameter/optional true 536870918] [72 :lib-scraper.model.concepts.parameter/position 0 536870918] [73 :description "The index of the cluster." 536870918] [73 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [73 :lib-scraper.model.concepts.named/name "i" 536870918] [73 :lib-scraper.model.concepts.parameter/position 0 536870918] [74 :description "The index of the cluster." 536870918] [74 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [74 :lib-scraper.model.concepts.named/name "i" 536870918] [74 :lib-scraper.model.concepts.parameter/position 0 536870918] [75 :description "The data." 536870918] [75 :type :lib-scraper.model.concepts.parameter/parameter 536870918] [75 :lib-scraper.model.concepts.named/name "data" 536870918] [75 :lib-scraper.model.concepts.parameter/position 1 536870918] [76 :description "Agglomerative Clustering" 536870919] [76 :description "Read more in the ." 536870919] [76 :description "Recursively merges the pair of clusters that minimally increases\na given linkage distance." 536870919] [76 :type :lib-scraper.model.ecosystems.python.class/class 536870919] [76 :lib-scraper.model.concepts.named/name "AgglomerativeClustering" 536870919] [76 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.AgglomerativeClustering" 536870919] [76 :lib-scraper.model.paradigms.oo.class/constructor 77 536870919] [76 :lib-scraper.model.paradigms.oo.class/method 77 536870919] [76 :lib-scraper.model.paradigms.oo.class/method 78 536870919] [76 :lib-scraper.model.paradigms.oo.class/method 79 536870919] [76 :lib-scraper.model.paradigms.oo.class/method 80 536870919] [76 :lib-scraper.model.paradigms.oo.class/method 81 536870919] [77 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870919] [77 :type :lib-scraper.model.paradigms.oo.method/method 536870919] [77 :lib-scraper.model.concepts.named/name "__init__" 536870919] [78 :description "Fit the hierarchical clustering on the data" 536870919] [78 :type :lib-scraper.model.paradigms.oo.method/method 536870919] [78 :lib-scraper.model.concepts.callable/parameter 82 536870919] [78 :lib-scraper.model.concepts.callable/parameter 83 536870919] [78 :lib-scraper.model.concepts.named/name "fit" 536870919] [79 :description "Performs clustering on X and returns cluster labels." 536870919] [79 :type :lib-scraper.model.paradigms.oo.method/method 536870919] [79 :lib-scraper.model.concepts.callable/parameter 84 536870919] [79 :lib-scraper.model.concepts.callable/parameter 85 536870919] [79 :lib-scraper.model.concepts.named/name "fit_predict" 536870919] [80 :description "Get parameters for this estimator." 536870919] [80 :type :lib-scraper.model.paradigms.oo.method/method 536870919] [80 :lib-scraper.model.concepts.callable/parameter 86 536870919] [80 :lib-scraper.model.concepts.named/name "get_params" 536870919] [81 :description "Set the parameters of this estimator." 536870919] [81 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870919] [81 :type :lib-scraper.model.paradigms.oo.method/method 536870919] [81 :lib-scraper.model.concepts.named/name "set_params" 536870919] [82 :description "Training data. Shape [n_samples, n_features], or [n_samples,\nn_samples] if affinity==’precomputed’." 536870919] [82 :type :lib-scraper.model.concepts.parameter/parameter 536870919] [82 :lib-scraper.model.concepts.named/name "X" 536870919] [82 :lib-scraper.model.concepts.parameter/position 0 536870919] [83 :type :lib-scraper.model.concepts.parameter/parameter 536870919] [83 :lib-scraper.model.concepts.named/name "y" 536870919] [83 :lib-scraper.model.concepts.parameter/position 1 536870919] [84 :description "Input data." 536870919] [84 :type :lib-scraper.model.concepts.parameter/parameter 536870919] [84 :lib-scraper.model.concepts.named/name "X" 536870919] [84 :lib-scraper.model.concepts.parameter/position 0 536870919] [85 :description "not used, present for API consistency by convention." 536870919] [85 :type :lib-scraper.model.concepts.parameter/parameter 536870919] [85 :lib-scraper.model.concepts.named/name "y" 536870919] [85 :lib-scraper.model.concepts.parameter/position 1 536870919] [86 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870919] [86 :type :lib-scraper.model.concepts.parameter/parameter 536870919] [86 :lib-scraper.model.concepts.named/name "deep" 536870919] [86 :lib-scraper.model.concepts.parameter/optional true 536870919] [86 :lib-scraper.model.concepts.parameter/position 0 536870919] [87 :description "Alternatively, using , a user-provided affinity\nmatrix can be used." 536870920] [87 :description "Another alternative is to take a symmetric version of the k\nnearest neighbors connectivity matrix of the points." 536870920] [87 :description "Apply clustering to a projection to the normalized laplacian." 536870920] [87 :description "If affinity is the adjacency matrix of a graph, this method can be\nused to find normalized graph cuts." 536870920] [87 :description "If the pyamg package is installed, it is used: this greatly\nspeeds up computation." 536870920] [87 :description "If you have an affinity matrix, such as a distance matrix,\nfor which 0 means identical elements, and high values means\nvery dissimilar elements, it can be transformed in a\nsimilarity matrix that is well suited for the algorithm by\napplying the Gaussian (RBF, heat) kernel:" 536870920] [87 :description "In practice Spectral Clustering is very useful when the structure of\nthe individual clusters is highly non-convex or more generally when\na measure of the center and spread of the cluster is not a suitable\ndescription of the complete cluster. For instance when clusters are\nnested circles on the 2D plan." 536870920] [87 :description "Read more in the ." 536870920] [87 :description "When calling , an affinity matrix is constructed using either\nkernel function such the Gaussian (aka RBF) kernel of the euclidean\ndistanced :" 536870920] [87 :description "Where  is a free parameter representing the width of the Gaussian\nkernel." 536870920] [87 :description "or a k-nearest neighbors connectivity matrix." 536870920] [87 :type :lib-scraper.model.ecosystems.python.class/class 536870920] [87 :lib-scraper.model.concepts.named/name "SpectralClustering" 536870920] [87 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.SpectralClustering" 536870920] [87 :lib-scraper.model.paradigms.oo.class/constructor 88 536870920] [87 :lib-scraper.model.paradigms.oo.class/method 88 536870920] [87 :lib-scraper.model.paradigms.oo.class/method 89 536870920] [87 :lib-scraper.model.paradigms.oo.class/method 90 536870920] [87 :lib-scraper.model.paradigms.oo.class/method 91 536870920] [87 :lib-scraper.model.paradigms.oo.class/method 92 536870920] [88 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870920] [88 :type :lib-scraper.model.paradigms.oo.method/method 536870920] [88 :lib-scraper.model.concepts.named/name "__init__" 536870920] [89 :description "Creates an affinity matrix for X using the selected affinity,\nthen applies spectral clustering to this affinity matrix." 536870920] [89 :type :lib-scraper.model.paradigms.oo.method/method 536870920] [89 :lib-scraper.model.concepts.callable/parameter 93 536870920] [89 :lib-scraper.model.concepts.callable/parameter 94 536870920] [89 :lib-scraper.model.concepts.named/name "fit" 536870920] [90 :description "Performs clustering on X and returns cluster labels." 536870920] [90 :type :lib-scraper.model.paradigms.oo.method/method 536870920] [90 :lib-scraper.model.concepts.callable/parameter 95 536870920] [90 :lib-scraper.model.concepts.callable/parameter 96 536870920] [90 :lib-scraper.model.concepts.named/name "fit_predict" 536870920] [91 :description "Get parameters for this estimator." 536870920] [91 :type :lib-scraper.model.paradigms.oo.method/method 536870920] [91 :lib-scraper.model.concepts.callable/parameter 97 536870920] [91 :lib-scraper.model.concepts.named/name "get_params" 536870920] [92 :description "Set the parameters of this estimator." 536870920] [92 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870920] [92 :type :lib-scraper.model.paradigms.oo.method/method 536870920] [92 :lib-scraper.model.concepts.named/name "set_params" 536870920] [93 :description "OR, if affinity==`precomputed`, a precomputed affinity\nmatrix of shape (n_samples, n_samples)" 536870920] [93 :type :lib-scraper.model.concepts.parameter/parameter 536870920] [93 :lib-scraper.model.concepts.named/name "X" 536870920] [93 :lib-scraper.model.concepts.parameter/position 0 536870920] [94 :type :lib-scraper.model.concepts.parameter/parameter 536870920] [94 :lib-scraper.model.concepts.named/name "y" 536870920] [94 :lib-scraper.model.concepts.parameter/position 1 536870920] [95 :description "Input data." 536870920] [95 :type :lib-scraper.model.concepts.parameter/parameter 536870920] [95 :lib-scraper.model.concepts.named/name "X" 536870920] [95 :lib-scraper.model.concepts.parameter/position 0 536870920] [96 :description "not used, present for API consistency by convention." 536870920] [96 :type :lib-scraper.model.concepts.parameter/parameter 536870920] [96 :lib-scraper.model.concepts.named/name "y" 536870920] [96 :lib-scraper.model.concepts.parameter/position 1 536870920] [97 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870920] [97 :type :lib-scraper.model.concepts.parameter/parameter 536870920] [97 :lib-scraper.model.concepts.named/name "deep" 536870920] [97 :lib-scraper.model.concepts.parameter/optional true 536870920] [97 :lib-scraper.model.concepts.parameter/position 0 536870920] [98 :description "For an example, see ." 536870921] [98 :description "Perform mean shift clustering of data using a flat kernel." 536870921] [98 :description "Read more in the ." 536870921] [98 :type :lib-scraper.model.paradigms.functional.function/function 536870921] [98 :lib-scraper.model.concepts.callable/parameter 99 536870921] [98 :lib-scraper.model.concepts.callable/parameter 100 536870921] [98 :lib-scraper.model.concepts.callable/parameter 101 536870921] [98 :lib-scraper.model.concepts.callable/parameter 102 536870921] [98 :lib-scraper.model.concepts.callable/parameter 103 536870921] [98 :lib-scraper.model.concepts.callable/parameter 104 536870921] [98 :lib-scraper.model.concepts.callable/parameter 105 536870921] [98 :lib-scraper.model.concepts.callable/parameter 106 536870921] [98 :lib-scraper.model.concepts.named/name "mean_shift" 536870921] [98 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.mean_shift" 536870921] [99 :description "Input data." 536870921] [99 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [99 :lib-scraper.model.concepts.named/name "X" 536870921] [99 :lib-scraper.model.concepts.parameter/position 0 536870921] [100 :description "If bandwidth is not given, it is determined using a heuristic based on\nthe median of all pairwise distances. This will take quadratic time in\nthe number of samples. The sklearn.cluster.estimate_bandwidth function\ncan be used to do this more efficiently." 536870921] [100 :description "Kernel bandwidth." 536870921] [100 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [100 :lib-scraper.model.concepts.named/name "bandwidth" 536870921] [100 :lib-scraper.model.concepts.parameter/optional true 536870921] [100 :lib-scraper.model.concepts.parameter/position 1 536870921] [101 :description "Point used as initial kernel locations. If None and bin_seeding=False,\neach data point is used as a seed. If None and bin_seeding=True,\nsee bin_seeding." 536870921] [101 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [101 :lib-scraper.model.concepts.named/name "seeds" 536870921] [101 :lib-scraper.model.concepts.parameter/position 2 536870921] [102 :description "If true, initial kernel locations are not locations of all\npoints, but rather the location of the discretized version of\npoints, where points are binned onto a grid whose coarseness\ncorresponds to the bandwidth. Setting this option to True will speed\nup the algorithm because fewer seeds will be initialized.\nIgnored if seeds argument is not None." 536870921] [102 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [102 :lib-scraper.model.concepts.named/name "bin_seeding" 536870921] [102 :lib-scraper.model.concepts.parameter/optional true 536870921] [102 :lib-scraper.model.concepts.parameter/position 3 536870921] [103 :description "To speed up the algorithm, accept only those bins with at least\nmin_bin_freq points as seeds." 536870921] [103 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [103 :lib-scraper.model.concepts.named/name "min_bin_freq" 536870921] [103 :lib-scraper.model.concepts.parameter/optional true 536870921] [103 :lib-scraper.model.concepts.parameter/position 4 536870921] [104 :description "If true, then all points are clustered, even those orphans that are\nnot within any kernel. Orphans are assigned to the nearest kernel.\nIf false, then orphans are given cluster label -1." 536870921] [104 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [104 :lib-scraper.model.concepts.named/name "cluster_all" 536870921] [104 :lib-scraper.model.concepts.parameter/optional true 536870921] [104 :lib-scraper.model.concepts.parameter/position 5 536870921] [105 :description "Maximum number of iterations, per seed point before the clustering\noperation terminates (for that seed point), if has not converged yet." 536870921] [105 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [105 :lib-scraper.model.concepts.named/name "max_iter" 536870921] [105 :lib-scraper.model.concepts.parameter/optional true 536870921] [105 :lib-scraper.model.concepts.parameter/position 6 536870921] [106 :description "The number of jobs to use for the computation. This works by computing\neach of the n_init runs in parallel." 536870921] [106 :description "means 1 unless in a  context.\n means using all processors. See \nfor more details." 536870921] [106 :type :lib-scraper.model.concepts.parameter/parameter 536870921] [106 :lib-scraper.model.concepts.named/name "n_jobs" 536870921] [106 :lib-scraper.model.concepts.parameter/optional true 536870921] [106 :lib-scraper.model.concepts.parameter/position 7 536870921] [107 :description "If the algorithm stops before fully converging (because of  or\n),  and  will not be consistent,\ni.e. the  will not be the means of the points in each\ncluster. Also, the estimator will reassign  after the last\niteration to make  consistent with  on the training\nset." 536870922] [107 :description "In practice, the k-means algorithm is very fast (one of the fastest\nclustering algorithms available), but it falls in local minima. That’s why\nit can be useful to restart it several times." 536870922] [107 :description "K-Means clustering" 536870922] [107 :description "Read more in the ." 536870922] [107 :description "The average complexity is given by O(k n T), were n is the number of\nsamples and T is the number of iteration." 536870922] [107 :description "The k-means problem is solved using either Lloyd’s or Elkan’s algorithm." 536870922] [107 :description "The worst case complexity is given by O(n^(k+2/p)) with\nn = n_samples, p = n_features. (D. Arthur and S. Vassilvitskii,\n‘How slow is the k-means method?’ SoCG2006)" 536870922] [107 :type :lib-scraper.model.ecosystems.python.class/class 536870922] [107 :lib-scraper.model.concepts.named/name "KMeans" 536870922] [107 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.KMeans" 536870922] [107 :lib-scraper.model.paradigms.oo.class/constructor 108 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 108 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 109 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 110 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 111 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 112 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 113 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 114 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 115 536870922] [107 :lib-scraper.model.paradigms.oo.class/method 116 536870922] [108 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870922] [108 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [108 :lib-scraper.model.concepts.named/name "__init__" 536870922] [109 :description "Compute k-means clustering." 536870922] [109 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [109 :lib-scraper.model.concepts.callable/parameter 117 536870922] [109 :lib-scraper.model.concepts.callable/parameter 118 536870922] [109 :lib-scraper.model.concepts.callable/parameter 119 536870922] [109 :lib-scraper.model.concepts.named/name "fit" 536870922] [110 :description "Compute cluster centers and predict cluster index for each sample." 536870922] [110 :description "Convenience method; equivalent to calling fit(X) followed by\npredict(X)." 536870922] [110 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [110 :lib-scraper.model.concepts.callable/parameter 120 536870922] [110 :lib-scraper.model.concepts.callable/parameter 121 536870922] [110 :lib-scraper.model.concepts.callable/parameter 122 536870922] [110 :lib-scraper.model.concepts.named/name "fit_predict" 536870922] [111 :description "Compute clustering and transform X to cluster-distance space." 536870922] [111 :description "Equivalent to fit(X).transform(X), but more efficiently implemented." 536870922] [111 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [111 :lib-scraper.model.concepts.callable/parameter 123 536870922] [111 :lib-scraper.model.concepts.callable/parameter 124 536870922] [111 :lib-scraper.model.concepts.callable/parameter 125 536870922] [111 :lib-scraper.model.concepts.named/name "fit_transform" 536870922] [112 :description "Get parameters for this estimator." 536870922] [112 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [112 :lib-scraper.model.concepts.callable/parameter 126 536870922] [112 :lib-scraper.model.concepts.named/name "get_params" 536870922] [113 :description "In the vector quantization literature,  is called\nthe code book and each value returned by  is the index of\nthe closest code in the code book." 536870922] [113 :description "Predict the closest cluster each sample in X belongs to." 536870922] [113 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [113 :lib-scraper.model.concepts.callable/parameter 127 536870922] [113 :lib-scraper.model.concepts.callable/parameter 128 536870922] [113 :lib-scraper.model.concepts.named/name "predict" 536870922] [114 :description "Opposite of the value of X on the K-means objective." 536870922] [114 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [114 :lib-scraper.model.concepts.callable/parameter 129 536870922] [114 :lib-scraper.model.concepts.callable/parameter 130 536870922] [114 :lib-scraper.model.concepts.callable/parameter 131 536870922] [114 :lib-scraper.model.concepts.named/name "score" 536870922] [115 :description "Set the parameters of this estimator." 536870922] [115 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870922] [115 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [115 :lib-scraper.model.concepts.named/name "set_params" 536870922] [116 :description "In the new space, each dimension is the distance to the cluster\ncenters.  Note that even if X is sparse, the array returned by\n will typically be dense." 536870922] [116 :description "Transform X to a cluster-distance space." 536870922] [116 :type :lib-scraper.model.paradigms.oo.method/method 536870922] [116 :lib-scraper.model.concepts.callable/parameter 132 536870922] [116 :lib-scraper.model.concepts.named/name "transform" 536870922] [117 :description "Training instances to cluster. It must be noted that the data\nwill be converted to C ordering, which will cause a memory\ncopy if the given data is not C-contiguous." 536870922] [117 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [117 :lib-scraper.model.concepts.named/name "X" 536870922] [117 :lib-scraper.model.concepts.parameter/position 0 536870922] [118 :description "not used, present here for API consistency by convention." 536870922] [118 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [118 :lib-scraper.model.concepts.named/name "y" 536870922] [118 :lib-scraper.model.concepts.parameter/position 1 536870922] [119 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870922] [119 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [119 :lib-scraper.model.concepts.named/name "sample_weight" 536870922] [119 :lib-scraper.model.concepts.parameter/optional true 536870922] [119 :lib-scraper.model.concepts.parameter/position 2 536870922] [120 :description "New data to transform." 536870922] [120 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [120 :lib-scraper.model.concepts.named/name "X" 536870922] [120 :lib-scraper.model.concepts.parameter/position 0 536870922] [121 :description "not used, present here for API consistency by convention." 536870922] [121 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [121 :lib-scraper.model.concepts.named/name "y" 536870922] [121 :lib-scraper.model.concepts.parameter/position 1 536870922] [122 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870922] [122 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [122 :lib-scraper.model.concepts.named/name "sample_weight" 536870922] [122 :lib-scraper.model.concepts.parameter/optional true 536870922] [122 :lib-scraper.model.concepts.parameter/position 2 536870922] [123 :description "New data to transform." 536870922] [123 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [123 :lib-scraper.model.concepts.named/name "X" 536870922] [123 :lib-scraper.model.concepts.parameter/position 0 536870922] [124 :description "not used, present here for API consistency by convention." 536870922] [124 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [124 :lib-scraper.model.concepts.named/name "y" 536870922] [124 :lib-scraper.model.concepts.parameter/position 1 536870922] [125 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870922] [125 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [125 :lib-scraper.model.concepts.named/name "sample_weight" 536870922] [125 :lib-scraper.model.concepts.parameter/optional true 536870922] [125 :lib-scraper.model.concepts.parameter/position 2 536870922] [126 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870922] [126 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [126 :lib-scraper.model.concepts.named/name "deep" 536870922] [126 :lib-scraper.model.concepts.parameter/optional true 536870922] [126 :lib-scraper.model.concepts.parameter/position 0 536870922] [127 :description "New data to predict." 536870922] [127 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [127 :lib-scraper.model.concepts.named/name "X" 536870922] [127 :lib-scraper.model.concepts.parameter/position 0 536870922] [128 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870922] [128 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [128 :lib-scraper.model.concepts.named/name "sample_weight" 536870922] [128 :lib-scraper.model.concepts.parameter/optional true 536870922] [128 :lib-scraper.model.concepts.parameter/position 1 536870922] [129 :description "New data." 536870922] [129 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [129 :lib-scraper.model.concepts.named/name "X" 536870922] [129 :lib-scraper.model.concepts.parameter/position 0 536870922] [130 :description "not used, present here for API consistency by convention." 536870922] [130 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [130 :lib-scraper.model.concepts.named/name "y" 536870922] [130 :lib-scraper.model.concepts.parameter/position 1 536870922] [131 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870922] [131 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [131 :lib-scraper.model.concepts.named/name "sample_weight" 536870922] [131 :lib-scraper.model.concepts.parameter/optional true 536870922] [131 :lib-scraper.model.concepts.parameter/position 2 536870922] [132 :description "New data to transform." 536870922] [132 :type :lib-scraper.model.concepts.parameter/parameter 536870922] [132 :lib-scraper.model.concepts.named/name "X" 536870922] [132 :lib-scraper.model.concepts.parameter/position 0 536870922] [138 :type :lib-scraper.model.concepts.datatype/datatype 536870923] [138 :lib-scraper.model.concepts.datatype/id "sparse" 536870923] [138 :lib-scraper.model.concepts.datatype/instance 141 536870923] [138 :lib-scraper.model.concepts.named/name "sparse" 536870923] [139 :description "Read more in the ." 536870923] [139 :description "Recursively merges the pair of clusters that minimally increases\nwithin-cluster variance." 536870923] [139 :description "The inertia matrix uses a Heapq-based representation." 536870923] [139 :description "This is the structured version, that takes into account some topological\nstructure between samples." 536870923] [139 :description "Ward clustering based on a Feature matrix." 536870923] [139 :type :lib-scraper.model.paradigms.functional.function/function 536870923] [139 :lib-scraper.model.concepts.callable/parameter 140 536870923] [139 :lib-scraper.model.concepts.callable/parameter 141 536870923] [139 :lib-scraper.model.concepts.callable/parameter 142 536870923] [139 :lib-scraper.model.concepts.callable/parameter 143 536870923] [139 :lib-scraper.model.concepts.named/name "ward_tree" 536870923] [139 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.ward_tree" 536870923] [140 :description "feature matrix  representing n_samples samples to be clustered" 536870923] [140 :type :lib-scraper.model.concepts.parameter/parameter 536870923] [140 :lib-scraper.model.concepts.named/name "X" 536870923] [140 :lib-scraper.model.concepts.parameter/position 0 536870923] [141 :description "connectivity matrix. Defines for each sample the neighboring samples\nfollowing a given structure of the data. The matrix is assumed to\nbe symmetric and only the upper triangular half is used.\nDefault is None, i.e, the Ward algorithm is unstructured." 536870923] [141 :type :lib-scraper.model.concepts.parameter/parameter 536870923] [141 :lib-scraper.model.concepts.named/name "connectivity" 536870923] [141 :lib-scraper.model.concepts.parameter/optional true 536870923] [141 :lib-scraper.model.concepts.parameter/position 1 536870923] [142 :description "Stop early the construction of the tree at n_clusters. This is\nuseful to decrease computation time if the number of clusters is\nnot small compared to the number of samples. In this case, the\ncomplete tree is not computed, thus the ‘children’ output is of\nlimited use, and the ‘parents’ output should rather be used.\nThis option is valid only when specifying a connectivity matrix." 536870923] [142 :type :lib-scraper.model.concepts.parameter/parameter 536870923] [142 :lib-scraper.model.concepts.named/name "n_clusters" 536870923] [142 :lib-scraper.model.concepts.parameter/optional true 536870923] [142 :lib-scraper.model.concepts.parameter/position 2 536870923] [143 :description "If True, return the distance between the clusters." 536870923] [143 :type :lib-scraper.model.concepts.parameter/parameter 536870923] [143 :lib-scraper.model.concepts.named/name "return_distance" 536870923] [143 :lib-scraper.model.concepts.parameter/optional true 536870923] [143 :lib-scraper.model.concepts.parameter/position 3 536870923] [144 :description "K-means clustering algorithm." 536870924] [144 :description "Read more in the ." 536870924] [144 :type :lib-scraper.model.paradigms.functional.function/function 536870924] [144 :lib-scraper.model.concepts.callable/parameter 145 536870924] [144 :lib-scraper.model.concepts.callable/parameter 146 536870924] [144 :lib-scraper.model.concepts.callable/parameter 147 536870924] [144 :lib-scraper.model.concepts.callable/parameter 148 536870924] [144 :lib-scraper.model.concepts.callable/parameter 149 536870924] [144 :lib-scraper.model.concepts.callable/parameter 150 536870924] [144 :lib-scraper.model.concepts.callable/parameter 151 536870924] [144 :lib-scraper.model.concepts.callable/parameter 152 536870924] [144 :lib-scraper.model.concepts.callable/parameter 153 536870924] [144 :lib-scraper.model.concepts.callable/parameter 154 536870924] [144 :lib-scraper.model.concepts.callable/parameter 155 536870924] [144 :lib-scraper.model.concepts.callable/parameter 156 536870924] [144 :lib-scraper.model.concepts.callable/parameter 157 536870924] [144 :lib-scraper.model.concepts.callable/parameter 158 536870924] [144 :lib-scraper.model.concepts.named/name "k_means" 536870924] [144 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.k_means" 536870924] [145 :description "The observations to cluster. It must be noted that the data\nwill be converted to C ordering, which will cause a memory copy\nif the given data is not C-contiguous." 536870924] [145 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [145 :lib-scraper.model.concepts.named/name "X" 536870924] [145 :lib-scraper.model.concepts.parameter/position 0 536870924] [146 :description "The number of clusters to form as well as the number of\ncentroids to generate." 536870924] [146 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [146 :lib-scraper.model.concepts.named/name "n_clusters" 536870924] [146 :lib-scraper.model.concepts.parameter/position 1 536870924] [147 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870924] [147 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [147 :lib-scraper.model.concepts.named/name "sample_weight" 536870924] [147 :lib-scraper.model.concepts.parameter/optional true 536870924] [147 :lib-scraper.model.concepts.parameter/position 2 536870924] [148 :description "If a callable is passed, it should take arguments X, k and\nand a random state and return an initialization." 536870924] [148 :description "If an ndarray is passed, it should be of shape (n_clusters, n_features)\nand gives the initial centers." 536870924] [148 :description "Method for initialization, default to ‘k-means++’:" 536870924] [148 :description "‘k-means++’ : selects initial cluster centers for k-mean\nclustering in a smart way to speed up convergence. See section\nNotes in k_init for more details." 536870924] [148 :description "‘random’: choose k observations (rows) at random from data for\nthe initial centroids." 536870924] [148 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [148 :lib-scraper.model.concepts.named/name "init" 536870924] [148 :lib-scraper.model.concepts.parameter/optional true 536870924] [148 :lib-scraper.model.concepts.parameter/position 3 536870924] [149 :description "False : never precompute distances" 536870924] [149 :description "Precompute distances (faster but takes more memory)." 536870924] [149 :description "True : always precompute distances" 536870924] [149 :description "‘auto’ : do not precompute distances if n_samples * n_clusters > 12\nmillion. This corresponds to about 100MB overhead per job using\ndouble precision." 536870924] [149 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [149 :lib-scraper.model.concepts.named/name "precompute_distances" 536870924] [149 :lib-scraper.model.concepts.parameter/position 4 536870924] [150 :description "Number of time the k-means algorithm will be run with different\ncentroid seeds. The final results will be the best output of\nn_init consecutive runs in terms of inertia." 536870924] [150 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [150 :lib-scraper.model.concepts.named/name "n_init" 536870924] [150 :lib-scraper.model.concepts.parameter/optional true 536870924] [150 :lib-scraper.model.concepts.parameter/position 5 536870924] [151 :description "Maximum number of iterations of the k-means algorithm to run." 536870924] [151 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [151 :lib-scraper.model.concepts.named/name "max_iter" 536870924] [151 :lib-scraper.model.concepts.parameter/optional true 536870924] [151 :lib-scraper.model.concepts.parameter/position 6 536870924] [152 :description "Verbosity mode." 536870924] [152 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [152 :lib-scraper.model.concepts.named/name "verbose" 536870924] [152 :lib-scraper.model.concepts.parameter/optional true 536870924] [152 :lib-scraper.model.concepts.parameter/position 7 536870924] [153 :description "The relative increment in the results before declaring convergence." 536870924] [153 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [153 :lib-scraper.model.concepts.named/name "tol" 536870924] [153 :lib-scraper.model.concepts.parameter/optional true 536870924] [153 :lib-scraper.model.concepts.parameter/position 8 536870924] [154 :description "Determines random number generation for centroid initialization. Use\nan int to make the randomness deterministic.\nSee ." 536870924] [154 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [154 :lib-scraper.model.concepts.named/name "random_state" 536870924] [154 :lib-scraper.model.concepts.parameter/optional true 536870924] [154 :lib-scraper.model.concepts.parameter/position 9 536870924] [155 :description "When pre-computing distances it is more numerically accurate to center\nthe data first.  If copy_x is True (default), then the original data is\nnot modified, ensuring X is C-contiguous.  If False, the original data\nis modified, and put back before the function returns, but small\nnumerical differences may be introduced by subtracting and then adding\nthe data mean, in this case it will also not ensure that data is\nC-contiguous which may cause a significant slowdown." 536870924] [155 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [155 :lib-scraper.model.concepts.named/name "copy_x" 536870924] [155 :lib-scraper.model.concepts.parameter/optional true 536870924] [155 :lib-scraper.model.concepts.parameter/position 10 536870924] [156 :description "The number of jobs to use for the computation. This works by computing\neach of the n_init runs in parallel." 536870924] [156 :description "means 1 unless in a  context.\n means using all processors. See \nfor more details." 536870924] [156 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [156 :lib-scraper.model.concepts.named/name "n_jobs" 536870924] [156 :lib-scraper.model.concepts.parameter/optional true 536870924] [156 :lib-scraper.model.concepts.parameter/position 11 536870924] [157 :description "K-means algorithm to use. The classical EM-style algorithm is “full”.\nThe “elkan” variation is more efficient by using the triangle\ninequality, but currently doesn’t support sparse data. “auto” chooses\n“elkan” for dense data and “full” for sparse data." 536870924] [157 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [157 :lib-scraper.model.concepts.named/name "algorithm" 536870924] [157 :lib-scraper.model.concepts.parameter/optional true 536870924] [157 :lib-scraper.model.concepts.parameter/position 12 536870924] [158 :description "Whether or not to return the number of iterations." 536870924] [158 :type :lib-scraper.model.concepts.parameter/parameter 536870924] [158 :lib-scraper.model.concepts.named/name "return_n_iter" 536870924] [158 :lib-scraper.model.concepts.parameter/optional true 536870924] [158 :lib-scraper.model.concepts.parameter/position 13 536870924] [162 :description "Another way to reduce memory and computation time is to remove\n(near-)duplicate points and use  instead." 536870925] [162 :description "DBSCAN - Density-Based Spatial Clustering of Applications with Noise.\nFinds core samples of high density and expands clusters from them.\nGood for data which contains clusters of similar density." 536870925] [162 :description "Ester, M., H. P. Kriegel, J. Sander, and X. Xu, “A Density-Based\nAlgorithm for Discovering Clusters in Large Spatial Databases with Noise”.\nIn: Proceedings of the 2nd International Conference on Knowledge Discovery\nand Data Mining, Portland, OR, AAAI Press, pp. 226-231. 1996" 536870925] [162 :description "For an example, see ." 536870925] [162 :description "One way to avoid the query complexity is to pre-compute sparse\nneighborhoods in chunks using\n with\n, then using  here." 536870925] [162 :description "Perform DBSCAN clustering from vector array or distance matrix." 536870925] [162 :description "Read more in the ." 536870925] [162 :description "This implementation bulk-computes all neighborhood queries, which increases\nthe memory complexity to O(n.d) where d is the average number of neighbors,\nwhile original DBSCAN had memory complexity O(n). It may attract a higher\nmemory complexity when querying these nearest neighborhoods, depending\non the ." 536870925] [162 :type :lib-scraper.model.ecosystems.python.class/class 536870925] [162 :lib-scraper.model.concepts.named/name "DBSCAN" 536870925] [162 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.DBSCAN" 536870925] [162 :lib-scraper.model.paradigms.oo.class/constructor 163 536870925] [162 :lib-scraper.model.paradigms.oo.class/method 163 536870925] [162 :lib-scraper.model.paradigms.oo.class/method 164 536870925] [162 :lib-scraper.model.paradigms.oo.class/method 165 536870925] [162 :lib-scraper.model.paradigms.oo.class/method 166 536870925] [162 :lib-scraper.model.paradigms.oo.class/method 167 536870925] [163 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870925] [163 :type :lib-scraper.model.paradigms.oo.method/method 536870925] [163 :lib-scraper.model.concepts.named/name "__init__" 536870925] [164 :description "Perform DBSCAN clustering from features or distance matrix." 536870925] [164 :type :lib-scraper.model.paradigms.oo.method/method 536870925] [164 :lib-scraper.model.concepts.callable/parameter 168 536870925] [164 :lib-scraper.model.concepts.callable/parameter 169 536870925] [164 :lib-scraper.model.concepts.callable/parameter 170 536870925] [164 :lib-scraper.model.concepts.named/name "fit" 536870925] [165 :description "Performs clustering on X and returns cluster labels." 536870925] [165 :type :lib-scraper.model.paradigms.oo.method/method 536870925] [165 :lib-scraper.model.concepts.callable/parameter 171 536870925] [165 :lib-scraper.model.concepts.callable/parameter 172 536870925] [165 :lib-scraper.model.concepts.callable/parameter 173 536870925] [165 :lib-scraper.model.concepts.named/name "fit_predict" 536870925] [166 :description "Get parameters for this estimator." 536870925] [166 :type :lib-scraper.model.paradigms.oo.method/method 536870925] [166 :lib-scraper.model.concepts.callable/parameter 174 536870925] [166 :lib-scraper.model.concepts.named/name "get_params" 536870925] [167 :description "Set the parameters of this estimator." 536870925] [167 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870925] [167 :type :lib-scraper.model.paradigms.oo.method/method 536870925] [167 :lib-scraper.model.concepts.named/name "set_params" 536870925] [168 :description "A feature array, or array of distances between samples if\n." 536870925] [168 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [168 :lib-scraper.model.concepts.named/name "X" 536870925] [168 :lib-scraper.model.concepts.parameter/position 0 536870925] [169 :description "Weight of each sample, such that a sample with a weight of at least\n is by itself a core sample; a sample with negative\nweight may inhibit its eps-neighbor from being core.\nNote that weights are absolute, and default to 1." 536870925] [169 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [169 :lib-scraper.model.concepts.named/name "sample_weight" 536870925] [169 :lib-scraper.model.concepts.parameter/optional true 536870925] [169 :lib-scraper.model.concepts.parameter/position 1 536870925] [170 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [170 :lib-scraper.model.concepts.named/name "y" 536870925] [170 :lib-scraper.model.concepts.parameter/position 2 536870925] [171 :description "A feature array, or array of distances between samples if\n." 536870925] [171 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [171 :lib-scraper.model.concepts.named/name "X" 536870925] [171 :lib-scraper.model.concepts.parameter/position 0 536870925] [172 :description "Weight of each sample, such that a sample with a weight of at least\n is by itself a core sample; a sample with negative\nweight may inhibit its eps-neighbor from being core.\nNote that weights are absolute, and default to 1." 536870925] [172 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [172 :lib-scraper.model.concepts.named/name "sample_weight" 536870925] [172 :lib-scraper.model.concepts.parameter/optional true 536870925] [172 :lib-scraper.model.concepts.parameter/position 1 536870925] [173 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [173 :lib-scraper.model.concepts.named/name "y" 536870925] [173 :lib-scraper.model.concepts.parameter/position 2 536870925] [174 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870925] [174 :type :lib-scraper.model.concepts.parameter/parameter 536870925] [174 :lib-scraper.model.concepts.named/name "deep" 536870925] [174 :lib-scraper.model.concepts.parameter/optional true 536870925] [174 :lib-scraper.model.concepts.parameter/position 0 536870925] [175 :description "Because this implementation uses a flat kernel and\na Ball Tree to look up members of each kernel, the complexity will tend\ntowards O(T*n*log(n)) in lower dimensions, with n the number of samples\nand T the number of points. In higher dimensions the complexity will\ntend towards O(T*n^2)." 536870926] [175 :description "Dorin Comaniciu and Peter Meer, “Mean Shift: A robust approach toward\nfeature space analysis”. IEEE Transactions on Pattern Analysis and\nMachine Intelligence. 2002. pp. 603-619." 536870926] [175 :description "Mean shift clustering aims to discover “blobs” in a smooth density of\nsamples. It is a centroid-based algorithm, which works by updating\ncandidates for centroids to be the mean of the points within a given\nregion. These candidates are then filtered in a post-processing stage to\neliminate near-duplicates to form the final set of centroids." 536870926] [175 :description "Mean shift clustering using a flat kernel." 536870926] [175 :description "Note that the estimate_bandwidth function is much less scalable than the\nmean shift algorithm and will be the bottleneck if it is used." 536870926] [175 :description "Read more in the ." 536870926] [175 :description "Scalability can be boosted by using fewer seeds, for example by using\na higher value of min_bin_freq in the get_bin_seeds function." 536870926] [175 :description "Scalability:" 536870926] [175 :description "Seeding is performed using a binning technique for scalability." 536870926] [175 :type :lib-scraper.model.ecosystems.python.class/class 536870926] [175 :lib-scraper.model.concepts.named/name "MeanShift" 536870926] [175 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.MeanShift" 536870926] [175 :lib-scraper.model.paradigms.oo.class/constructor 176 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 176 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 177 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 178 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 179 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 180 536870926] [175 :lib-scraper.model.paradigms.oo.class/method 181 536870926] [176 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870926] [176 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [176 :lib-scraper.model.concepts.named/name "__init__" 536870926] [177 :description "Perform clustering." 536870926] [177 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [177 :lib-scraper.model.concepts.callable/parameter 182 536870926] [177 :lib-scraper.model.concepts.callable/parameter 183 536870926] [177 :lib-scraper.model.concepts.named/name "fit" 536870926] [178 :description "Performs clustering on X and returns cluster labels." 536870926] [178 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [178 :lib-scraper.model.concepts.callable/parameter 184 536870926] [178 :lib-scraper.model.concepts.callable/parameter 185 536870926] [178 :lib-scraper.model.concepts.named/name "fit_predict" 536870926] [179 :description "Get parameters for this estimator." 536870926] [179 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [179 :lib-scraper.model.concepts.callable/parameter 186 536870926] [179 :lib-scraper.model.concepts.named/name "get_params" 536870926] [180 :description "Predict the closest cluster each sample in X belongs to." 536870926] [180 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [180 :lib-scraper.model.concepts.callable/parameter 187 536870926] [180 :lib-scraper.model.concepts.named/name "predict" 536870926] [181 :description "Set the parameters of this estimator." 536870926] [181 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870926] [181 :type :lib-scraper.model.paradigms.oo.method/method 536870926] [181 :lib-scraper.model.concepts.named/name "set_params" 536870926] [182 :description "Samples to cluster." 536870926] [182 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [182 :lib-scraper.model.concepts.named/name "X" 536870926] [182 :lib-scraper.model.concepts.parameter/position 0 536870926] [183 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [183 :lib-scraper.model.concepts.named/name "y" 536870926] [183 :lib-scraper.model.concepts.parameter/position 1 536870926] [184 :description "Input data." 536870926] [184 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [184 :lib-scraper.model.concepts.named/name "X" 536870926] [184 :lib-scraper.model.concepts.parameter/position 0 536870926] [185 :description "not used, present for API consistency by convention." 536870926] [185 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [185 :lib-scraper.model.concepts.named/name "y" 536870926] [185 :lib-scraper.model.concepts.parameter/position 1 536870926] [186 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870926] [186 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [186 :lib-scraper.model.concepts.named/name "deep" 536870926] [186 :lib-scraper.model.concepts.parameter/optional true 536870926] [186 :lib-scraper.model.concepts.parameter/position 0 536870926] [187 :description "New data to predict." 536870926] [187 :type :lib-scraper.model.concepts.parameter/parameter 536870926] [187 :lib-scraper.model.concepts.named/name "X" 536870926] [187 :lib-scraper.model.concepts.parameter/position 0 536870926] [189 :description "Mini-Batch K-Means clustering" 536870927] [189 :description "Read more in the ." 536870927] [189 :description "See" 536870927] [189 :type :lib-scraper.model.ecosystems.python.class/class 536870927] [189 :lib-scraper.model.concepts.named/name "MiniBatchKMeans" 536870927] [189 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.MiniBatchKMeans" 536870927] [189 :lib-scraper.model.paradigms.oo.class/constructor 190 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 190 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 191 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 192 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 193 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 194 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 195 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 196 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 197 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 198 536870927] [189 :lib-scraper.model.paradigms.oo.class/method 199 536870927] [190 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870927] [190 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [190 :lib-scraper.model.concepts.named/name "__init__" 536870927] [191 :description "Compute the centroids on X by chunking it into mini-batches." 536870927] [191 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [191 :lib-scraper.model.concepts.callable/parameter 200 536870927] [191 :lib-scraper.model.concepts.callable/parameter 201 536870927] [191 :lib-scraper.model.concepts.callable/parameter 202 536870927] [191 :lib-scraper.model.concepts.named/name "fit" 536870927] [192 :description "Compute cluster centers and predict cluster index for each sample." 536870927] [192 :description "Convenience method; equivalent to calling fit(X) followed by\npredict(X)." 536870927] [192 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [192 :lib-scraper.model.concepts.callable/parameter 203 536870927] [192 :lib-scraper.model.concepts.callable/parameter 204 536870927] [192 :lib-scraper.model.concepts.callable/parameter 205 536870927] [192 :lib-scraper.model.concepts.named/name "fit_predict" 536870927] [193 :description "Compute clustering and transform X to cluster-distance space." 536870927] [193 :description "Equivalent to fit(X).transform(X), but more efficiently implemented." 536870927] [193 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [193 :lib-scraper.model.concepts.callable/parameter 206 536870927] [193 :lib-scraper.model.concepts.callable/parameter 207 536870927] [193 :lib-scraper.model.concepts.callable/parameter 208 536870927] [193 :lib-scraper.model.concepts.named/name "fit_transform" 536870927] [194 :description "Get parameters for this estimator." 536870927] [194 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [194 :lib-scraper.model.concepts.callable/parameter 209 536870927] [194 :lib-scraper.model.concepts.named/name "get_params" 536870927] [195 :description "Update k means estimate on a single mini-batch X." 536870927] [195 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [195 :lib-scraper.model.concepts.callable/parameter 210 536870927] [195 :lib-scraper.model.concepts.callable/parameter 211 536870927] [195 :lib-scraper.model.concepts.callable/parameter 212 536870927] [195 :lib-scraper.model.concepts.named/name "partial_fit" 536870927] [196 :description "In the vector quantization literature,  is called\nthe code book and each value returned by  is the index of\nthe closest code in the code book." 536870927] [196 :description "Predict the closest cluster each sample in X belongs to." 536870927] [196 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [196 :lib-scraper.model.concepts.callable/parameter 213 536870927] [196 :lib-scraper.model.concepts.callable/parameter 214 536870927] [196 :lib-scraper.model.concepts.named/name "predict" 536870927] [197 :description "Opposite of the value of X on the K-means objective." 536870927] [197 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [197 :lib-scraper.model.concepts.callable/parameter 215 536870927] [197 :lib-scraper.model.concepts.callable/parameter 216 536870927] [197 :lib-scraper.model.concepts.callable/parameter 217 536870927] [197 :lib-scraper.model.concepts.named/name "score" 536870927] [198 :description "Set the parameters of this estimator." 536870927] [198 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870927] [198 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [198 :lib-scraper.model.concepts.named/name "set_params" 536870927] [199 :description "In the new space, each dimension is the distance to the cluster\ncenters.  Note that even if X is sparse, the array returned by\n will typically be dense." 536870927] [199 :description "Transform X to a cluster-distance space." 536870927] [199 :type :lib-scraper.model.paradigms.oo.method/method 536870927] [199 :lib-scraper.model.concepts.callable/parameter 218 536870927] [199 :lib-scraper.model.concepts.named/name "transform" 536870927] [200 :description "Training instances to cluster. It must be noted that the data\nwill be converted to C ordering, which will cause a memory copy\nif the given data is not C-contiguous." 536870927] [200 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [200 :lib-scraper.model.concepts.named/name "X" 536870927] [200 :lib-scraper.model.concepts.parameter/position 0 536870927] [201 :description "not used, present here for API consistency by convention." 536870927] [201 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [201 :lib-scraper.model.concepts.named/name "y" 536870927] [201 :lib-scraper.model.concepts.parameter/position 1 536870927] [202 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [202 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [202 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [202 :lib-scraper.model.concepts.parameter/optional true 536870927] [202 :lib-scraper.model.concepts.parameter/position 2 536870927] [203 :description "New data to transform." 536870927] [203 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [203 :lib-scraper.model.concepts.named/name "X" 536870927] [203 :lib-scraper.model.concepts.parameter/position 0 536870927] [204 :description "not used, present here for API consistency by convention." 536870927] [204 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [204 :lib-scraper.model.concepts.named/name "y" 536870927] [204 :lib-scraper.model.concepts.parameter/position 1 536870927] [205 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [205 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [205 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [205 :lib-scraper.model.concepts.parameter/optional true 536870927] [205 :lib-scraper.model.concepts.parameter/position 2 536870927] [206 :description "New data to transform." 536870927] [206 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [206 :lib-scraper.model.concepts.named/name "X" 536870927] [206 :lib-scraper.model.concepts.parameter/position 0 536870927] [207 :description "not used, present here for API consistency by convention." 536870927] [207 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [207 :lib-scraper.model.concepts.named/name "y" 536870927] [207 :lib-scraper.model.concepts.parameter/position 1 536870927] [208 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [208 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [208 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [208 :lib-scraper.model.concepts.parameter/optional true 536870927] [208 :lib-scraper.model.concepts.parameter/position 2 536870927] [209 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870927] [209 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [209 :lib-scraper.model.concepts.named/name "deep" 536870927] [209 :lib-scraper.model.concepts.parameter/optional true 536870927] [209 :lib-scraper.model.concepts.parameter/position 0 536870927] [210 :description "Coordinates of the data points to cluster. It must be noted that\nX will be copied if it is not C-contiguous." 536870927] [210 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [210 :lib-scraper.model.concepts.named/name "X" 536870927] [210 :lib-scraper.model.concepts.parameter/position 0 536870927] [211 :description "not used, present here for API consistency by convention." 536870927] [211 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [211 :lib-scraper.model.concepts.named/name "y" 536870927] [211 :lib-scraper.model.concepts.parameter/position 1 536870927] [212 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [212 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [212 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [212 :lib-scraper.model.concepts.parameter/optional true 536870927] [212 :lib-scraper.model.concepts.parameter/position 2 536870927] [213 :description "New data to predict." 536870927] [213 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [213 :lib-scraper.model.concepts.named/name "X" 536870927] [213 :lib-scraper.model.concepts.parameter/position 0 536870927] [214 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [214 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [214 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [214 :lib-scraper.model.concepts.parameter/optional true 536870927] [214 :lib-scraper.model.concepts.parameter/position 1 536870927] [215 :description "New data." 536870927] [215 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [215 :lib-scraper.model.concepts.named/name "X" 536870927] [215 :lib-scraper.model.concepts.parameter/position 0 536870927] [216 :description "not used, present here for API consistency by convention." 536870927] [216 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [216 :lib-scraper.model.concepts.named/name "y" 536870927] [216 :lib-scraper.model.concepts.parameter/position 1 536870927] [217 :description "The weights for each observation in X. If None, all observations\nare assigned equal weight (default: None)" 536870927] [217 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [217 :lib-scraper.model.concepts.named/name "sample_weight" 536870927] [217 :lib-scraper.model.concepts.parameter/optional true 536870927] [217 :lib-scraper.model.concepts.parameter/position 2 536870927] [218 :description "New data to transform." 536870927] [218 :type :lib-scraper.model.concepts.parameter/parameter 536870927] [218 :lib-scraper.model.concepts.named/name "X" 536870927] [218 :lib-scraper.model.concepts.parameter/position 0 536870927] [224 :type :lib-scraper.model.concepts.datatype/datatype 536870928] [224 :lib-scraper.model.concepts.datatype/id "numpy" 536870928] [224 :lib-scraper.model.concepts.datatype/instance 239 536870928] [224 :lib-scraper.model.concepts.datatype/instance 240 536870928] [224 :lib-scraper.model.concepts.datatype/instance 263 536870929] [224 :lib-scraper.model.concepts.datatype/instance 264 536870929] [224 :lib-scraper.model.concepts.named/name "numpy" 536870928] [225 :description "For a new point entering the root, it is merged with the subcluster closest\nto it and the linear sum, squared sum and the number of samples of that\nsubcluster are updated. This is done recursively till the properties of\nthe leaf node are updated." 536870928] [225 :description "Implements the Birch clustering algorithm." 536870928] [225 :description "It is a memory-efficient, online-learning algorithm provided as an\nalternative to . It constructs a tree\ndata structure with the cluster centroids being read off the leaf.\nThese can be either the final cluster centroids or can be provided as input\nto another clustering algorithm such as ." 536870928] [225 :description "Read more in the ." 536870928] [225 :description "The tree data structure consists of nodes with each node consisting of\na number of subclusters. The maximum number of subclusters in a node\nis determined by the branching factor. Each subcluster maintains a\nlinear sum, squared sum and the number of samples in that subcluster.\nIn addition, each subcluster can also have a node as its child, if the\nsubcluster is not a member of a leaf node." 536870928] [225 :type :lib-scraper.model.ecosystems.python.class/class 536870928] [225 :lib-scraper.model.concepts.named/name "Birch" 536870928] [225 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.Birch" 536870928] [225 :lib-scraper.model.paradigms.oo.class/constructor 226 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 226 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 227 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 228 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 229 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 230 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 231 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 232 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 233 536870928] [225 :lib-scraper.model.paradigms.oo.class/method 234 536870928] [226 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870928] [226 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [226 :lib-scraper.model.concepts.named/name "__init__" 536870928] [227 :description "Build a CF Tree for the input data." 536870928] [227 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [227 :lib-scraper.model.concepts.callable/parameter 235 536870928] [227 :lib-scraper.model.concepts.callable/parameter 236 536870928] [227 :lib-scraper.model.concepts.named/name "fit" 536870928] [228 :description "Performs clustering on X and returns cluster labels." 536870928] [228 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [228 :lib-scraper.model.concepts.callable/parameter 237 536870928] [228 :lib-scraper.model.concepts.callable/parameter 238 536870928] [228 :lib-scraper.model.concepts.named/name "fit_predict" 536870928] [229 :description "Fit to data, then transform it." 536870928] [229 :description "Fits transformer to X and y with optional parameters fit_params\nand returns a transformed version of X." 536870928] [229 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [229 :lib-scraper.model.concepts.callable/parameter 239 536870928] [229 :lib-scraper.model.concepts.callable/parameter 240 536870928] [229 :lib-scraper.model.concepts.named/name "fit_transform" 536870928] [230 :description "Get parameters for this estimator." 536870928] [230 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [230 :lib-scraper.model.concepts.callable/parameter 241 536870928] [230 :lib-scraper.model.concepts.named/name "get_params" 536870928] [231 :description "Online learning. Prevents rebuilding of CFTree from scratch." 536870928] [231 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [231 :lib-scraper.model.concepts.callable/parameter 242 536870928] [231 :lib-scraper.model.concepts.callable/parameter 243 536870928] [231 :lib-scraper.model.concepts.named/name "partial_fit" 536870928] [232 :description "Avoid computation of the row norms of X." 536870928] [232 :description "Predict data using the  of subclusters." 536870928] [232 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [232 :lib-scraper.model.concepts.callable/parameter 244 536870928] [232 :lib-scraper.model.concepts.named/name "predict" 536870928] [233 :description "Set the parameters of this estimator." 536870928] [233 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870928] [233 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [233 :lib-scraper.model.concepts.named/name "set_params" 536870928] [234 :description "Each dimension represents the distance from the sample point to each\ncluster centroid." 536870928] [234 :description "Transform X into subcluster centroids dimension." 536870928] [234 :type :lib-scraper.model.paradigms.oo.method/method 536870928] [234 :lib-scraper.model.concepts.callable/parameter 245 536870928] [234 :lib-scraper.model.concepts.named/name "transform" 536870928] [235 :description "Input data." 536870928] [235 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [235 :lib-scraper.model.concepts.named/name "X" 536870928] [235 :lib-scraper.model.concepts.parameter/position 0 536870928] [236 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [236 :lib-scraper.model.concepts.named/name "y" 536870928] [236 :lib-scraper.model.concepts.parameter/position 1 536870928] [237 :description "Input data." 536870928] [237 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [237 :lib-scraper.model.concepts.named/name "X" 536870928] [237 :lib-scraper.model.concepts.parameter/position 0 536870928] [238 :description "not used, present for API consistency by convention." 536870928] [238 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [238 :lib-scraper.model.concepts.named/name "y" 536870928] [238 :lib-scraper.model.concepts.parameter/position 1 536870928] [239 :description "Training set." 536870928] [239 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [239 :lib-scraper.model.concepts.named/name "X" 536870928] [239 :lib-scraper.model.concepts.parameter/position 0 536870928] [240 :description "Target values." 536870928] [240 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [240 :lib-scraper.model.concepts.named/name "y" 536870928] [240 :lib-scraper.model.concepts.parameter/position 1 536870928] [241 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870928] [241 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [241 :lib-scraper.model.concepts.named/name "deep" 536870928] [241 :lib-scraper.model.concepts.parameter/optional true 536870928] [241 :lib-scraper.model.concepts.parameter/position 0 536870928] [242 :description "Input data. If X is not provided, only the global clustering\nstep is done." 536870928] [242 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [242 :lib-scraper.model.concepts.named/name "X" 536870928] [242 :lib-scraper.model.concepts.parameter/position 0 536870928] [243 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [243 :lib-scraper.model.concepts.named/name "y" 536870928] [243 :lib-scraper.model.concepts.parameter/position 1 536870928] [244 :description "Input data." 536870928] [244 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [244 :lib-scraper.model.concepts.named/name "X" 536870928] [244 :lib-scraper.model.concepts.parameter/position 0 536870928] [245 :description "Input data." 536870928] [245 :type :lib-scraper.model.concepts.parameter/parameter 536870928] [245 :lib-scraper.model.concepts.named/name "X" 536870928] [245 :lib-scraper.model.concepts.parameter/position 0 536870928] [250 :type :lib-scraper.model.concepts.datatype/datatype 536870929] [250 :lib-scraper.model.concepts.datatype/id "None" 536870929] [250 :lib-scraper.model.concepts.datatype/instance 268 536870929] [250 :lib-scraper.model.concepts.named/name "None" 536870929] [251 :type :lib-scraper.model.concepts.datatype/datatype 536870929] [251 :lib-scraper.model.concepts.datatype/id "data" 536870929] [251 :lib-scraper.model.concepts.datatype/instance 269 536870929] [251 :lib-scraper.model.concepts.named/name "data" 536870929] [252 :description "Agglomerate features." 536870929] [252 :description "Read more in the ." 536870929] [252 :description "Similar to AgglomerativeClustering, but recursively merges features\ninstead of samples." 536870929] [252 :type :lib-scraper.model.ecosystems.python.class/class 536870929] [252 :lib-scraper.model.concepts.named/name "FeatureAgglomeration" 536870929] [252 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.FeatureAgglomeration" 536870929] [252 :lib-scraper.model.paradigms.oo.class/constructor 253 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 253 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 254 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 255 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 256 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 257 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 258 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 259 536870929] [252 :lib-scraper.model.paradigms.oo.class/method 260 536870929] [253 :type :lib-scraper.model.paradigms.oo.constructor/constructor 536870929] [253 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [253 :lib-scraper.model.concepts.named/name "__init__" 536870929] [254 :description "Fit the hierarchical clustering on the data" 536870929] [254 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [254 :lib-scraper.model.concepts.callable/parameter 261 536870929] [254 :lib-scraper.model.concepts.callable/parameter 262 536870929] [254 :lib-scraper.model.concepts.named/name "fit" 536870929] [255 :description "Fit to data, then transform it." 536870929] [255 :description "Fits transformer to X and y with optional parameters fit_params\nand returns a transformed version of X." 536870929] [255 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [255 :lib-scraper.model.concepts.callable/parameter 263 536870929] [255 :lib-scraper.model.concepts.callable/parameter 264 536870929] [255 :lib-scraper.model.concepts.named/name "fit_transform" 536870929] [256 :description "Get parameters for this estimator." 536870929] [256 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [256 :lib-scraper.model.concepts.callable/parameter 265 536870929] [256 :lib-scraper.model.concepts.named/name "get_params" 536870929] [257 :description "Inverse the transformation.\nReturn a vector of size nb_features with the values of Xred assigned\nto each group of features" 536870929] [257 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [257 :lib-scraper.model.concepts.callable/parameter 266 536870929] [257 :lib-scraper.model.concepts.named/name "inverse_transform" 536870929] [258 :description "By default,  results are computed using  intermediates\nfor extra precision." 536870929] [258 :description "Compute the arithmetic mean along the specified axis." 536870929] [258 :description "Computing the mean in float64 is more accurate:" 536870929] [258 :description "In single precision,  can be inaccurate:" 536870929] [258 :description "Note that for floating-point input, the mean is computed using the\nsame precision the input has.  Depending on the input data, this can\ncause the results to be inaccurate, especially for  (see\nexample below).  Specifying a higher-precision accumulator using the\n keyword can alleviate this issue." 536870929] [258 :description "Returns the average of the array elements.  The average is taken over\nthe flattened array by default, otherwise over the specified axis.\n intermediate and return values are used for integer inputs." 536870929] [258 :description "The arithmetic mean is the sum of the elements along the axis divided\nby the number of elements." 536870929] [258 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [258 :lib-scraper.model.concepts.callable/parameter 267 536870929] [258 :lib-scraper.model.concepts.callable/parameter 268 536870929] [258 :lib-scraper.model.concepts.callable/parameter 269 536870929] [258 :lib-scraper.model.concepts.callable/parameter 270 536870929] [258 :lib-scraper.model.concepts.callable/parameter 271 536870929] [258 :lib-scraper.model.concepts.named/name "pooling_func" 536870929] [259 :description "Set the parameters of this estimator." 536870929] [259 :description "The method works on simple estimators as well as on nested objects\n(such as pipelines). The latter have parameters of the form\n so that it’s possible to update each\ncomponent of a nested object." 536870929] [259 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [259 :lib-scraper.model.concepts.named/name "set_params" 536870929] [260 :description "Transform a new matrix using the built clustering" 536870929] [260 :type :lib-scraper.model.paradigms.oo.method/method 536870929] [260 :lib-scraper.model.concepts.callable/parameter 272 536870929] [260 :lib-scraper.model.concepts.named/name "transform" 536870929] [261 :description "The data" 536870929] [261 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [261 :lib-scraper.model.concepts.named/name "X" 536870929] [261 :lib-scraper.model.concepts.parameter/position 0 536870929] [262 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [262 :lib-scraper.model.concepts.named/name "y" 536870929] [262 :lib-scraper.model.concepts.parameter/position 1 536870929] [263 :description "Training set." 536870929] [263 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [263 :lib-scraper.model.concepts.named/name "X" 536870929] [263 :lib-scraper.model.concepts.parameter/position 0 536870929] [264 :description "Target values." 536870929] [264 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [264 :lib-scraper.model.concepts.named/name "y" 536870929] [264 :lib-scraper.model.concepts.parameter/position 1 536870929] [265 :description "If True, will return the parameters for this estimator and\ncontained subobjects that are estimators." 536870929] [265 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [265 :lib-scraper.model.concepts.named/name "deep" 536870929] [265 :lib-scraper.model.concepts.parameter/optional true 536870929] [265 :lib-scraper.model.concepts.parameter/position 0 536870929] [266 :description "The values to be assigned to each cluster of samples" 536870929] [266 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [266 :lib-scraper.model.concepts.named/name "Xred" 536870929] [266 :lib-scraper.model.concepts.parameter/position 0 536870929] [267 :description "Array containing numbers whose mean is desired. If  is not an\narray, a conversion is attempted." 536870929] [267 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [267 :lib-scraper.model.concepts.named/name "a" 536870929] [267 :lib-scraper.model.concepts.parameter/position 0 536870929] [268 :description "Axis or axes along which the means are computed. The default is to\ncompute the mean of the flattened array." 536870929] [268 :description "If this is a tuple of ints, a mean is performed over multiple axes,\ninstead of a single axis or all the axes as before." 536870929] [268 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [268 :lib-scraper.model.concepts.named/name "axis" 536870929] [268 :lib-scraper.model.concepts.parameter/optional true 536870929] [268 :lib-scraper.model.concepts.parameter/position 1 536870929] [269 :description "Type to use in computing the mean.  For integer inputs, the default\nis ; for floating point inputs, it is the same as the\ninput dtype." 536870929] [269 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [269 :lib-scraper.model.concepts.named/name "dtype" 536870929] [269 :lib-scraper.model.concepts.parameter/optional true 536870929] [269 :lib-scraper.model.concepts.parameter/position 2 536870929] [270 :description "Alternate output array in which to place the result.  The default\nis ; if provided, it must have the same shape as the\nexpected output, but the type will be cast if necessary.\nSee  for details." 536870929] [270 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [270 :lib-scraper.model.concepts.named/name "out" 536870929] [270 :lib-scraper.model.concepts.parameter/optional true 536870929] [270 :lib-scraper.model.concepts.parameter/position 3 536870929] [271 :description "If the default value is passed, then  will not be\npassed through to the  method of sub-classes of\n, however any non-default value will be.  If the\nsub-class’ method does not implement  any\nexceptions will be raised." 536870929] [271 :description "If this is set to True, the axes which are reduced are left\nin the result as dimensions with size one. With this option,\nthe result will broadcast correctly against the input array." 536870929] [271 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [271 :lib-scraper.model.concepts.named/name "keepdims" 536870929] [271 :lib-scraper.model.concepts.parameter/optional true 536870929] [271 :lib-scraper.model.concepts.parameter/position 4 536870929] [272 :description "A M by N array of M observations in N dimensions or a length\nM array of M one-dimensional observations." 536870929] [272 :type :lib-scraper.model.concepts.parameter/parameter 536870929] [272 :lib-scraper.model.concepts.named/name "X" 536870929] [272 :lib-scraper.model.concepts.parameter/position 0 536870929] [273 :description "Estimate the bandwidth to use with the mean-shift algorithm." 536870930] [273 :description "That this function takes time at least quadratic in n_samples. For large\ndatasets, it’s wise to set that parameter to a small value." 536870930] [273 :type :lib-scraper.model.paradigms.functional.function/function 536870930] [273 :lib-scraper.model.concepts.callable/parameter 274 536870930] [273 :lib-scraper.model.concepts.callable/parameter 275 536870930] [273 :lib-scraper.model.concepts.callable/parameter 276 536870930] [273 :lib-scraper.model.concepts.callable/parameter 277 536870930] [273 :lib-scraper.model.concepts.callable/parameter 278 536870930] [273 :lib-scraper.model.concepts.named/name "estimate_bandwidth" 536870930] [273 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.estimate_bandwidth" 536870930] [274 :description "Input points." 536870930] [274 :type :lib-scraper.model.concepts.parameter/parameter 536870930] [274 :lib-scraper.model.concepts.named/name "X" 536870930] [274 :lib-scraper.model.concepts.parameter/position 0 536870930] [275 :description "should be between [0, 1]\n0.5 means that the median of all pairwise distances is used." 536870930] [275 :type :lib-scraper.model.concepts.parameter/parameter 536870930] [275 :lib-scraper.model.concepts.named/name "quantile" 536870930] [275 :lib-scraper.model.concepts.parameter/optional true 536870930] [275 :lib-scraper.model.concepts.parameter/position 1 536870930] [276 :description "The number of samples to use. If not given, all samples are used." 536870930] [276 :type :lib-scraper.model.concepts.parameter/parameter 536870930] [276 :lib-scraper.model.concepts.named/name "n_samples" 536870930] [276 :lib-scraper.model.concepts.parameter/optional true 536870930] [276 :lib-scraper.model.concepts.parameter/position 2 536870930] [277 :description "The generator used to randomly select the samples from input points\nfor bandwidth estimation. Use an int to make the randomness\ndeterministic.\nSee ." 536870930] [277 :type :lib-scraper.model.concepts.parameter/parameter 536870930] [277 :lib-scraper.model.concepts.named/name "random_state" 536870930] [277 :lib-scraper.model.concepts.parameter/optional true 536870930] [277 :lib-scraper.model.concepts.parameter/position 3 536870930] [278 :description "The number of parallel jobs to run for neighbors search.\n means 1 unless in a  context.\n means using all processors. See \nfor more details." 536870930] [278 :type :lib-scraper.model.concepts.parameter/parameter 536870930] [278 :lib-scraper.model.concepts.named/name "n_jobs" 536870930] [278 :lib-scraper.model.concepts.parameter/optional true 536870930] [278 :lib-scraper.model.concepts.parameter/position 4 536870930] [279 :type :lib-scraper.model.concepts.datatype/datatype 536870931] [279 :lib-scraper.model.concepts.datatype/id "string" 536870931] [279 :lib-scraper.model.concepts.datatype/instance 285 536870931] [279 :lib-scraper.model.concepts.named/name "string" 536870931] [280 :type :lib-scraper.model.concepts.datatype/datatype 536870931] [280 :lib-scraper.model.concepts.datatype/id "dict" 536870931] [280 :lib-scraper.model.concepts.datatype/instance 286 536870931] [280 :lib-scraper.model.concepts.named/name "dict" 536870931] [281 :description "Another way to reduce memory and computation time is to remove\n(near-)duplicate points and use  instead." 536870931] [281 :description "Ester, M., H. P. Kriegel, J. Sander, and X. Xu, “A Density-Based\nAlgorithm for Discovering Clusters in Large Spatial Databases with Noise”.\nIn: Proceedings of the 2nd International Conference on Knowledge Discovery\nand Data Mining, Portland, OR, AAAI Press, pp. 226-231. 1996" 536870931] [281 :description "For an example, see ." 536870931] [281 :description "One way to avoid the query complexity is to pre-compute sparse\nneighborhoods in chunks using\n with\n, then using  here." 536870931] [281 :description "Perform DBSCAN clustering from vector array or distance matrix." 536870931] [281 :description "Read more in the ." 536870931] [281 :description "This implementation bulk-computes all neighborhood queries, which increases\nthe memory complexity to O(n.d) where d is the average number of neighbors,\nwhile original DBSCAN had memory complexity O(n). It may attract a higher\nmemory complexity when querying these nearest neighborhoods, depending\non the ." 536870931] [281 :type :lib-scraper.model.paradigms.functional.function/function 536870931] [281 :lib-scraper.model.concepts.callable/parameter 282 536870931] [281 :lib-scraper.model.concepts.callable/parameter 283 536870931] [281 :lib-scraper.model.concepts.callable/parameter 284 536870931] [281 :lib-scraper.model.concepts.callable/parameter 285 536870931] [281 :lib-scraper.model.concepts.callable/parameter 286 536870931] [281 :lib-scraper.model.concepts.callable/parameter 287 536870931] [281 :lib-scraper.model.concepts.callable/parameter 288 536870931] [281 :lib-scraper.model.concepts.callable/parameter 289 536870931] [281 :lib-scraper.model.concepts.callable/parameter 290 536870931] [281 :lib-scraper.model.concepts.callable/parameter 291 536870931] [281 :lib-scraper.model.concepts.named/name "dbscan" 536870931] [281 :lib-scraper.model.concepts.namespaced/id "sklearn.cluster.dbscan" 536870931] [282 :description "A feature array, or array of distances between samples if\n." 536870931] [282 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [282 :lib-scraper.model.concepts.named/name "X" 536870931] [282 :lib-scraper.model.concepts.parameter/position 0 536870931] [283 :description "The maximum distance between two samples for them to be considered\nas in the same neighborhood." 536870931] [283 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [283 :lib-scraper.model.concepts.named/name "eps" 536870931] [283 :lib-scraper.model.concepts.parameter/optional true 536870931] [283 :lib-scraper.model.concepts.parameter/position 1 536870931] [284 :description "The number of samples (or total weight) in a neighborhood for a point\nto be considered as a core point. This includes the point itself." 536870931] [284 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [284 :lib-scraper.model.concepts.named/name "min_samples" 536870931] [284 :lib-scraper.model.concepts.parameter/optional true 536870931] [284 :lib-scraper.model.concepts.parameter/position 2 536870931] [285 :description "The metric to use when calculating distance between instances in a\nfeature array. If metric is a string or callable, it must be one of\nthe options allowed by  for\nits metric parameter.\nIf metric is “precomputed”, X is assumed to be a distance matrix and\nmust be square. X may be a sparse matrix, in which case only “nonzero”\nelements may be considered neighbors for DBSCAN." 536870931] [285 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [285 :lib-scraper.model.concepts.named/name "metric" 536870931] [285 :lib-scraper.model.concepts.parameter/position 3 536870931] [286 :description "Additional keyword arguments for the metric function." 536870931] [286 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [286 :lib-scraper.model.concepts.named/name "metric_params" 536870931] [286 :lib-scraper.model.concepts.parameter/optional true 536870931] [286 :lib-scraper.model.concepts.parameter/position 4 536870931] [287 :description "The algorithm to be used by the NearestNeighbors module\nto compute pointwise distances and find nearest neighbors.\nSee NearestNeighbors module documentation for details." 536870931] [287 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [287 :lib-scraper.model.concepts.named/name "algorithm" 536870931] [287 :lib-scraper.model.concepts.parameter/optional true 536870931] [287 :lib-scraper.model.concepts.parameter/position 5 536870931] [288 :description "Leaf size passed to BallTree or cKDTree. This can affect the speed\nof the construction and query, as well as the memory required\nto store the tree. The optimal value depends\non the nature of the problem." 536870931] [288 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [288 :lib-scraper.model.concepts.named/name "leaf_size" 536870931] [288 :lib-scraper.model.concepts.parameter/optional true 536870931] [288 :lib-scraper.model.concepts.parameter/position 6 536870931] [289 :description "The power of the Minkowski metric to be used to calculate distance\nbetween points." 536870931] [289 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [289 :lib-scraper.model.concepts.named/name "p" 536870931] [289 :lib-scraper.model.concepts.parameter/optional true 536870931] [289 :lib-scraper.model.concepts.parameter/position 7 536870931] [290 :description "Weight of each sample, such that a sample with a weight of at least\n is by itself a core sample; a sample with negative\nweight may inhibit its eps-neighbor from being core.\nNote that weights are absolute, and default to 1." 536870931] [290 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [290 :lib-scraper.model.concepts.named/name "sample_weight" 536870931] [290 :lib-scraper.model.concepts.parameter/optional true 536870931] [290 :lib-scraper.model.concepts.parameter/position 8 536870931] [291 :description "The number of parallel jobs to run for neighbors search.\n means 1 unless in a  context.\n means using all processors. See \nfor more details." 536870931] [291 :type :lib-scraper.model.concepts.parameter/parameter 536870931] [291 :lib-scraper.model.concepts.named/name "n_jobs" 536870931] [291 :lib-scraper.model.concepts.parameter/optional true 536870931] [291 :lib-scraper.model.concepts.parameter/position 9 536870931] [536870913 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.spectral_clustering.html" 536870913] [536870914 :source "https://scikit-learn.org/0.20/modules/classes.html" 536870914] [536870915 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.bicluster.SpectralBiclustering.html" 536870915] [536870916 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.affinity_propagation.html" 536870916] [536870917 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.AffinityPropagation.html" 536870917] [536870918 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.bicluster.SpectralCoclustering.html" 536870918] [536870919 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.AgglomerativeClustering.html" 536870919] [536870920 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.SpectralClustering.html" 536870920] [536870921 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.mean_shift.html" 536870921] [536870922 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.KMeans.html" 536870922] [536870923 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.ward_tree.html" 536870923] [536870924 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.k_means.html" 536870924] [536870925 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.DBSCAN.html" 536870925] [536870926 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.MeanShift.html" 536870926] [536870927 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.MiniBatchKMeans.html" 536870927] [536870928 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.Birch.html" 536870928] [536870929 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.FeatureAgglomeration.html" 536870929] [536870930 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.estimate_bandwidth.html" 536870930] [536870931 :source "https://scikit-learn.org/0.20/modules/generated/sklearn.cluster.dbscan.html" 536870931]]}, :name "scikit-learn-cluster", :created #inst "2019-01-12T20:50:20.047-00:00", :ecosystem :python, :ecosystem/version "1.0.0", :meta {:python/version "3.7.2", :python/dependencies [[scikit-learn "0.20.2"]]}}